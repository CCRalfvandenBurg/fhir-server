name: dotnet build
description: Builds the packages and ensures their quality by running tests.
inputs:
  assemblyVersion:
    description: The scaler assembly's version.
    required: true
  buildConfiguration:
    default: Debug
    description: The dotnet build configuration.
    required: false
  fileVersion:
    description: The scaler assembly's file version.
    required: true
  informationalVersion:
    description: The scaler assembly's informational version.
    required: true
  dotnetVersion:
    description: The version of dotnet to use.
    required: true
  majorMinorPatch:
    description: The major.minor.patch version to use.
    required: true
runs:
  using: composite
  steps:
    - name: Setup dotnet ${{ inputs.dotnetVersion }}
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ inputs.dotnetVersion}}

    - name: Restore Dependencies
      shell: bash
      run: dotnet restore
    
    - name: Convert version
      id: convert_version
      shell: bash
      run: |
          dotnetVersion=${{inputs.dotnetVersion}}
          version=$( echo "$dotnetVersion" | sed 's/^\([0-9]*\)\..*/\1/')
          netVersion="net${version}.0"
          echo "$netVersion"
          echo "net_version=$netVersion"  >> "$GITHUB_OUTPUT"
          
    - name: Build
      shell: bash
      run: dotnet build -f ${{steps.convert_version.outputs.net_version}} --configuration ${{inputs.buildConfiguration}} -p:ContinuousIntegrationBuild=true -p:AssemblyVersion="${{inputs.assemblyVersion}}" -p:FileVersion="${{inputs.fileVersion}}" -p:InformationalVersion="${{inputs.informationalVersion}}" -p:Version="${{inputs.majorMinorPatch}}" -warnaserror

    - name: Test
      shell: bash
      run: dotnet test "Microsoft.Health.Fhir.sln" -f ${{steps.convert_version.outputs.net_version}} --filter "FullyQualifiedName\~UnitTests" --configuration ${{inputs.buildConfiguration}} --no-build --verbosity normal
