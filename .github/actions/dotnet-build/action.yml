name: dotnet build
description: Builds the packages and ensures their quality by running tests.
inputs:
  assemblyVersion:
    description: The scaler assembly's version.
    required: true
  buildConfiguration:
    default: Debug
    description: The dotnet build configuration.
    required: false
  fileVersion:
    description: The scaler assembly's file version.
    required: true
  informationalVersion:
    description: The scaler assembly's informational version.
    required: true
  dotnetVersion:
    description: The version of dotnet to use.
    required: true
  majorMinorPatch:
    description: The major.minor.patch version to use.
    required: true
runs:
  using: composite
  steps:
    - name: Setup dotnet ${{ inputs.dotnetVersion }}
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ inputs.dotnetVersion}}

    - name: Restore Dependencies
      shell: bash
      run: dotnet restore
    
    - name: Build
      shell: bash
      run: dotnet build --configuration ${{inputs.buildConfiguration}} -p:ContinuousIntegrationBuild=true -p:AssemblyVersion="${{inputs.assemblyVersion}}" -p:FileVersion="${{inputs.fileVersion}}" -p:InformationalVersion="${{inputs.informationalVersion}}" -p:Version="${{inputs.majorMinorPatch}}" -warnaserror

    - name: Test
      shell: bash
      run: dotnet test "Microsoft.Health.Fhir.sln" --filter "FullyQualifiedName\~UnitTests" --configuration ${{inputs.buildConfiguration}} --no-build --verbosity normal

    # - name: Publish Artifacts
    #   shell: bash
    #   run: dotnet publish "Microsoft.Health.Fhir.sln" --output $(Build.ArtifactStagingDirectory)/web --configuration ${{inputs.buildConfiguration}} --no-build -f $(defaultBuildFramework)
    # - name: Pack nugets
    #   shell: bash
    #   run: dotnet pack "Microsoft.Health.Fhir.sln" --output $(Build.ArtifactStagingDirectory)/nupkgs --no-build --configuration=Release -p:PackageVersion=${{inputs.nugetVersion}}
      #Try pack command here to see if it picks up both framework outputs. It may not without referencing output of each job
    # - name: Code Coverage Report
    #   uses: irongut/CodeCoverageSummary@v1.3.0
    #   with:
    #     filename: coverage/**/coverage.cobertura.xml
    #     badge: true
    #     fail_below_min: true
    #     format: markdown
    #     hide_branch_rate: false
    #     hide_complexity: true
    #     indicators: true
    #     output: both
    #     thresholds: '60 80'
    # - run: mkdir -p coverage
    #   shell: bash
    # - run: mkdir -p artifacts
    #   shell: bash
    # - name: actions/upload-artifact
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: fhirBuild-${{inputs.dotnetVersion}}
    #     path: artifacts
    #     retention-days: 1
    # - name: Upload Code Coverage Results
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: fhirBuild-${{inputs.dotnetVersion}}
    #     path: artifacts
    #     retention-days: 1
