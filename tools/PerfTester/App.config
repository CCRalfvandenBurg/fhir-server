<?xml version="1.0" encoding="utf-8" ?>
<!--
 This program is used to measure latency of selected methods from SqlStoreClient class.
 If allows also, to test different implementations of Resource (expects Resource_Table and Resource_View objects).
 It can be extended to do more.
 -->
<configuration>
  <connectionStrings>
    <!-- connection to tested database -->
    <add name="Database" connectionString="server=.;database=tempdb;integrated security=true" />
  </connectionStrings>
  <appSettings>
    <!-- connection string to storage where we store ids for test, random ids are picked from this list on each run -->
    <add key="StorageConnectionString" value="" />
    <add key="StorageContainerName" value="resourceids" />
    <add key="StorageBlobName" value="resourceids" />
    <!-- Parallel threads calls will run with -->
    <add key="Threads" value="8" />
    <!-- Number of calls to perform test on -->
    <add key="Calls" value="1000" />
    <!-- supported values in CallType include: GetAsync, GetByTransactionId, HardDeleteNoChangeCapture, HardDeleteWithChangeCapture -->
    <add key="CallType" value="GetAsync" />
    <!-- if true, code dumps (ResourceTypeId, ResourceId) combinations from the existing database to specified above storage -->
    <add key="WriteResourceIds" value="false" />
    <add key="ReportingPeriodSec" value="30" />
    <!-- if true, code switches from Resource as TABLE to Resource as VIEW on ResourceCurrent UNION ALL ResourceHistory -->
    <add key="PerformTableViewCompare" value="true" />
  </appSettings>
</configuration>
