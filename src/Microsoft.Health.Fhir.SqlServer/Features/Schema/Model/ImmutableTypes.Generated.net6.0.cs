//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Microsoft.Health.Fhir.SqlServer.Features.Schema.Model
{
    using Microsoft.Health.SqlServer.Features.Client;
    using Microsoft.Health.SqlServer.Features.Schema.Model;

    internal class BigintListTableValuedParameterDefinition : TableValuedParameterDefinition<BigintListRow>
    {
        internal BigintListTableValuedParameterDefinition(System.String parameterName) : base(parameterName, "dbo.BigintList")
        {
        }

        internal readonly BigIntColumn Id = new BigIntColumn("Id");

        protected override global::System.Collections.Generic.IEnumerable<Column> Columns => new Column[] { Id };

        protected override void FillSqlDataRecord(global::Microsoft.Data.SqlClient.Server.SqlDataRecord record, BigintListRow rowData)
        {
            Id.Set(record, 0, rowData.Id);
        }
    }

    internal struct BigintListRow
    {
        internal BigintListRow(System.Int64 Id)
        {
            this.Id = Id;
        }

        internal System.Int64 Id { get; }
    }

    internal class BulkCompartmentAssignmentTableTypeV1TableValuedParameterDefinition : TableValuedParameterDefinition<BulkCompartmentAssignmentTableTypeV1Row>
    {
        internal BulkCompartmentAssignmentTableTypeV1TableValuedParameterDefinition(System.String parameterName) : base(parameterName, "dbo.BulkCompartmentAssignmentTableType_1")
        {
        }

        internal readonly IntColumn Offset = new IntColumn("Offset");
        internal readonly TinyIntColumn CompartmentTypeId = new TinyIntColumn("CompartmentTypeId");
        internal readonly VarCharColumn ReferenceResourceId = new VarCharColumn("ReferenceResourceId", 64, "Latin1_General_100_CS_AS");

        protected override global::System.Collections.Generic.IEnumerable<Column> Columns => new Column[] { Offset, CompartmentTypeId, ReferenceResourceId };

        protected override void FillSqlDataRecord(global::Microsoft.Data.SqlClient.Server.SqlDataRecord record, BulkCompartmentAssignmentTableTypeV1Row rowData)
        {
            Offset.Set(record, 0, rowData.Offset);
            CompartmentTypeId.Set(record, 1, rowData.CompartmentTypeId);
            ReferenceResourceId.Set(record, 2, rowData.ReferenceResourceId);
        }
    }

    internal struct BulkCompartmentAssignmentTableTypeV1Row
    {
        internal BulkCompartmentAssignmentTableTypeV1Row(System.Int32 Offset, System.Byte CompartmentTypeId, System.String ReferenceResourceId)
        {
            this.Offset = Offset;
            this.CompartmentTypeId = CompartmentTypeId;
            this.ReferenceResourceId = ReferenceResourceId;
        }

        internal System.Int32 Offset { get; }
        internal System.Byte CompartmentTypeId { get; }
        internal System.String ReferenceResourceId { get; }
    }

    internal class BulkDateTimeSearchParamTableTypeV1TableValuedParameterDefinition : TableValuedParameterDefinition<BulkDateTimeSearchParamTableTypeV1Row>
    {
        internal BulkDateTimeSearchParamTableTypeV1TableValuedParameterDefinition(System.String parameterName) : base(parameterName, "dbo.BulkDateTimeSearchParamTableType_1")
        {
        }

        internal readonly IntColumn Offset = new IntColumn("Offset");
        internal readonly SmallIntColumn SearchParamId = new SmallIntColumn("SearchParamId");
        internal readonly DateTimeOffsetColumn StartDateTime = new DateTimeOffsetColumn("StartDateTime", 7);
        internal readonly DateTimeOffsetColumn EndDateTime = new DateTimeOffsetColumn("EndDateTime", 7);
        internal readonly BitColumn IsLongerThanADay = new BitColumn("IsLongerThanADay");

        protected override global::System.Collections.Generic.IEnumerable<Column> Columns => new Column[] { Offset, SearchParamId, StartDateTime, EndDateTime, IsLongerThanADay };

        protected override void FillSqlDataRecord(global::Microsoft.Data.SqlClient.Server.SqlDataRecord record, BulkDateTimeSearchParamTableTypeV1Row rowData)
        {
            Offset.Set(record, 0, rowData.Offset);
            SearchParamId.Set(record, 1, rowData.SearchParamId);
            StartDateTime.Set(record, 2, rowData.StartDateTime);
            EndDateTime.Set(record, 3, rowData.EndDateTime);
            IsLongerThanADay.Set(record, 4, rowData.IsLongerThanADay);
        }
    }

    internal struct BulkDateTimeSearchParamTableTypeV1Row
    {
        internal BulkDateTimeSearchParamTableTypeV1Row(System.Int32 Offset, System.Int16 SearchParamId, System.DateTimeOffset StartDateTime, System.DateTimeOffset EndDateTime, System.Boolean IsLongerThanADay)
        {
            this.Offset = Offset;
            this.SearchParamId = SearchParamId;
            this.StartDateTime = StartDateTime;
            this.EndDateTime = EndDateTime;
            this.IsLongerThanADay = IsLongerThanADay;
        }

        internal System.Int32 Offset { get; }
        internal System.Int16 SearchParamId { get; }
        internal System.DateTimeOffset StartDateTime { get; }
        internal System.DateTimeOffset EndDateTime { get; }
        internal System.Boolean IsLongerThanADay { get; }
    }

    internal class BulkDateTimeSearchParamTableTypeV2TableValuedParameterDefinition : TableValuedParameterDefinition<BulkDateTimeSearchParamTableTypeV2Row>
    {
        internal BulkDateTimeSearchParamTableTypeV2TableValuedParameterDefinition(System.String parameterName) : base(parameterName, "dbo.BulkDateTimeSearchParamTableType_2")
        {
        }

        internal readonly IntColumn Offset = new IntColumn("Offset");
        internal readonly SmallIntColumn SearchParamId = new SmallIntColumn("SearchParamId");
        internal readonly DateTimeOffsetColumn StartDateTime = new DateTimeOffsetColumn("StartDateTime", 7);
        internal readonly DateTimeOffsetColumn EndDateTime = new DateTimeOffsetColumn("EndDateTime", 7);
        internal readonly BitColumn IsLongerThanADay = new BitColumn("IsLongerThanADay");
        internal readonly BitColumn IsMin = new BitColumn("IsMin");
        internal readonly BitColumn IsMax = new BitColumn("IsMax");

        protected override global::System.Collections.Generic.IEnumerable<Column> Columns => new Column[] { Offset, SearchParamId, StartDateTime, EndDateTime, IsLongerThanADay, IsMin, IsMax };

        protected override void FillSqlDataRecord(global::Microsoft.Data.SqlClient.Server.SqlDataRecord record, BulkDateTimeSearchParamTableTypeV2Row rowData)
        {
            Offset.Set(record, 0, rowData.Offset);
            SearchParamId.Set(record, 1, rowData.SearchParamId);
            StartDateTime.Set(record, 2, rowData.StartDateTime);
            EndDateTime.Set(record, 3, rowData.EndDateTime);
            IsLongerThanADay.Set(record, 4, rowData.IsLongerThanADay);
            IsMin.Set(record, 5, rowData.IsMin);
            IsMax.Set(record, 6, rowData.IsMax);
        }
    }

    internal struct BulkDateTimeSearchParamTableTypeV2Row
    {
        internal BulkDateTimeSearchParamTableTypeV2Row(System.Int32 Offset, System.Int16 SearchParamId, System.DateTimeOffset StartDateTime, System.DateTimeOffset EndDateTime, System.Boolean IsLongerThanADay, System.Boolean IsMin, System.Boolean IsMax)
        {
            this.Offset = Offset;
            this.SearchParamId = SearchParamId;
            this.StartDateTime = StartDateTime;
            this.EndDateTime = EndDateTime;
            this.IsLongerThanADay = IsLongerThanADay;
            this.IsMin = IsMin;
            this.IsMax = IsMax;
        }

        internal System.Int32 Offset { get; }
        internal System.Int16 SearchParamId { get; }
        internal System.DateTimeOffset StartDateTime { get; }
        internal System.DateTimeOffset EndDateTime { get; }
        internal System.Boolean IsLongerThanADay { get; }
        internal System.Boolean IsMin { get; }
        internal System.Boolean IsMax { get; }
    }

    internal class BulkImportResourceTypeV1TableValuedParameterDefinition : TableValuedParameterDefinition<BulkImportResourceTypeV1Row>
    {
        internal BulkImportResourceTypeV1TableValuedParameterDefinition(System.String parameterName) : base(parameterName, "dbo.BulkImportResourceType_1")
        {
        }

        internal readonly SmallIntColumn ResourceTypeId = new SmallIntColumn("ResourceTypeId");
        internal readonly VarCharColumn ResourceId = new VarCharColumn("ResourceId", 64, "Latin1_General_100_CS_AS");
        internal readonly IntColumn Version = new IntColumn("Version");
        internal readonly BitColumn IsHistory = new BitColumn("IsHistory");
        internal readonly BigIntColumn ResourceSurrogateId = new BigIntColumn("ResourceSurrogateId");
        internal readonly BitColumn IsDeleted = new BitColumn("IsDeleted");
        internal readonly NullableVarCharColumn RequestMethod = new NullableVarCharColumn("RequestMethod", 10);
        internal readonly VarBinaryColumn RawResource = new VarBinaryColumn("RawResource", -1);
        internal readonly BitColumn IsRawResourceMetaSet = new BitColumn("IsRawResourceMetaSet");
        internal readonly NullableVarCharColumn SearchParamHash = new NullableVarCharColumn("SearchParamHash", 64);

        protected override global::System.Collections.Generic.IEnumerable<Column> Columns => new Column[] { ResourceTypeId, ResourceId, Version, IsHistory, ResourceSurrogateId, IsDeleted, RequestMethod, RawResource, IsRawResourceMetaSet, SearchParamHash };

        protected override void FillSqlDataRecord(global::Microsoft.Data.SqlClient.Server.SqlDataRecord record, BulkImportResourceTypeV1Row rowData)
        {
            ResourceTypeId.Set(record, 0, rowData.ResourceTypeId);
            ResourceId.Set(record, 1, rowData.ResourceId);
            Version.Set(record, 2, rowData.Version);
            IsHistory.Set(record, 3, rowData.IsHistory);
            ResourceSurrogateId.Set(record, 4, rowData.ResourceSurrogateId);
            IsDeleted.Set(record, 5, rowData.IsDeleted);
            RequestMethod.Set(record, 6, rowData.RequestMethod);
            RawResource.Set(record, 7, rowData.RawResource);
            IsRawResourceMetaSet.Set(record, 8, rowData.IsRawResourceMetaSet);
            SearchParamHash.Set(record, 9, rowData.SearchParamHash);
        }
    }

    internal struct BulkImportResourceTypeV1Row
    {
        internal BulkImportResourceTypeV1Row(System.Int16 ResourceTypeId, System.String ResourceId, System.Int32 Version, System.Boolean IsHistory, System.Int64 ResourceSurrogateId, System.Boolean IsDeleted, System.String RequestMethod, global::System.IO.Stream RawResource, System.Boolean IsRawResourceMetaSet, System.String SearchParamHash)
        {
            this.ResourceTypeId = ResourceTypeId;
            this.ResourceId = ResourceId;
            this.Version = Version;
            this.IsHistory = IsHistory;
            this.ResourceSurrogateId = ResourceSurrogateId;
            this.IsDeleted = IsDeleted;
            this.RequestMethod = RequestMethod;
            this.RawResource = RawResource;
            this.IsRawResourceMetaSet = IsRawResourceMetaSet;
            this.SearchParamHash = SearchParamHash;
        }

        internal System.Int16 ResourceTypeId { get; }
        internal System.String ResourceId { get; }
        internal System.Int32 Version { get; }
        internal System.Boolean IsHistory { get; }
        internal System.Int64 ResourceSurrogateId { get; }
        internal System.Boolean IsDeleted { get; }
        internal System.String RequestMethod { get; }
        internal global::System.IO.Stream RawResource { get; }
        internal System.Boolean IsRawResourceMetaSet { get; }
        internal System.String SearchParamHash { get; }
    }

    internal class BulkNumberSearchParamTableTypeV1TableValuedParameterDefinition : TableValuedParameterDefinition<BulkNumberSearchParamTableTypeV1Row>
    {
        internal BulkNumberSearchParamTableTypeV1TableValuedParameterDefinition(System.String parameterName) : base(parameterName, "dbo.BulkNumberSearchParamTableType_1")
        {
        }

        internal readonly IntColumn Offset = new IntColumn("Offset");
        internal readonly SmallIntColumn SearchParamId = new SmallIntColumn("SearchParamId");
        internal readonly NullableDecimalColumn SingleValue = new NullableDecimalColumn("SingleValue", 18, 6);
        internal readonly NullableDecimalColumn LowValue = new NullableDecimalColumn("LowValue", 18, 6);
        internal readonly NullableDecimalColumn HighValue = new NullableDecimalColumn("HighValue", 18, 6);

        protected override global::System.Collections.Generic.IEnumerable<Column> Columns => new Column[] { Offset, SearchParamId, SingleValue, LowValue, HighValue };

        protected override void FillSqlDataRecord(global::Microsoft.Data.SqlClient.Server.SqlDataRecord record, BulkNumberSearchParamTableTypeV1Row rowData)
        {
            Offset.Set(record, 0, rowData.Offset);
            SearchParamId.Set(record, 1, rowData.SearchParamId);
            SingleValue.Set(record, 2, rowData.SingleValue);
            LowValue.Set(record, 3, rowData.LowValue);
            HighValue.Set(record, 4, rowData.HighValue);
        }
    }

    internal struct BulkNumberSearchParamTableTypeV1Row
    {
        internal BulkNumberSearchParamTableTypeV1Row(System.Int32 Offset, System.Int16 SearchParamId, System.Nullable<System.Decimal> SingleValue, System.Nullable<System.Decimal> LowValue, System.Nullable<System.Decimal> HighValue)
        {
            this.Offset = Offset;
            this.SearchParamId = SearchParamId;
            this.SingleValue = SingleValue;
            this.LowValue = LowValue;
            this.HighValue = HighValue;
        }

        internal System.Int32 Offset { get; }
        internal System.Int16 SearchParamId { get; }
        internal System.Nullable<System.Decimal> SingleValue { get; }
        internal System.Nullable<System.Decimal> LowValue { get; }
        internal System.Nullable<System.Decimal> HighValue { get; }
    }

    internal class BulkQuantitySearchParamTableTypeV1TableValuedParameterDefinition : TableValuedParameterDefinition<BulkQuantitySearchParamTableTypeV1Row>
    {
        internal BulkQuantitySearchParamTableTypeV1TableValuedParameterDefinition(System.String parameterName) : base(parameterName, "dbo.BulkQuantitySearchParamTableType_1")
        {
        }

        internal readonly IntColumn Offset = new IntColumn("Offset");
        internal readonly SmallIntColumn SearchParamId = new SmallIntColumn("SearchParamId");
        internal readonly NullableIntColumn SystemId = new NullableIntColumn("SystemId");
        internal readonly NullableIntColumn QuantityCodeId = new NullableIntColumn("QuantityCodeId");
        internal readonly NullableDecimalColumn SingleValue = new NullableDecimalColumn("SingleValue", 18, 6);
        internal readonly NullableDecimalColumn LowValue = new NullableDecimalColumn("LowValue", 18, 6);
        internal readonly NullableDecimalColumn HighValue = new NullableDecimalColumn("HighValue", 18, 6);

        protected override global::System.Collections.Generic.IEnumerable<Column> Columns => new Column[] { Offset, SearchParamId, SystemId, QuantityCodeId, SingleValue, LowValue, HighValue };

        protected override void FillSqlDataRecord(global::Microsoft.Data.SqlClient.Server.SqlDataRecord record, BulkQuantitySearchParamTableTypeV1Row rowData)
        {
            Offset.Set(record, 0, rowData.Offset);
            SearchParamId.Set(record, 1, rowData.SearchParamId);
            SystemId.Set(record, 2, rowData.SystemId);
            QuantityCodeId.Set(record, 3, rowData.QuantityCodeId);
            SingleValue.Set(record, 4, rowData.SingleValue);
            LowValue.Set(record, 5, rowData.LowValue);
            HighValue.Set(record, 6, rowData.HighValue);
        }
    }

    internal struct BulkQuantitySearchParamTableTypeV1Row
    {
        internal BulkQuantitySearchParamTableTypeV1Row(System.Int32 Offset, System.Int16 SearchParamId, System.Nullable<System.Int32> SystemId, System.Nullable<System.Int32> QuantityCodeId, System.Nullable<System.Decimal> SingleValue, System.Nullable<System.Decimal> LowValue, System.Nullable<System.Decimal> HighValue)
        {
            this.Offset = Offset;
            this.SearchParamId = SearchParamId;
            this.SystemId = SystemId;
            this.QuantityCodeId = QuantityCodeId;
            this.SingleValue = SingleValue;
            this.LowValue = LowValue;
            this.HighValue = HighValue;
        }

        internal System.Int32 Offset { get; }
        internal System.Int16 SearchParamId { get; }
        internal System.Nullable<System.Int32> SystemId { get; }
        internal System.Nullable<System.Int32> QuantityCodeId { get; }
        internal System.Nullable<System.Decimal> SingleValue { get; }
        internal System.Nullable<System.Decimal> LowValue { get; }
        internal System.Nullable<System.Decimal> HighValue { get; }
    }

    internal class BulkReferenceSearchParamTableTypeV1TableValuedParameterDefinition : TableValuedParameterDefinition<BulkReferenceSearchParamTableTypeV1Row>
    {
        internal BulkReferenceSearchParamTableTypeV1TableValuedParameterDefinition(System.String parameterName) : base(parameterName, "dbo.BulkReferenceSearchParamTableType_1")
        {
        }

        internal readonly IntColumn Offset = new IntColumn("Offset");
        internal readonly SmallIntColumn SearchParamId = new SmallIntColumn("SearchParamId");
        internal readonly NullableVarCharColumn BaseUri = new NullableVarCharColumn("BaseUri", 128, "Latin1_General_100_CS_AS");
        internal readonly NullableSmallIntColumn ReferenceResourceTypeId = new NullableSmallIntColumn("ReferenceResourceTypeId");
        internal readonly VarCharColumn ReferenceResourceId = new VarCharColumn("ReferenceResourceId", 64, "Latin1_General_100_CS_AS");
        internal readonly NullableIntColumn ReferenceResourceVersion = new NullableIntColumn("ReferenceResourceVersion");

        protected override global::System.Collections.Generic.IEnumerable<Column> Columns => new Column[] { Offset, SearchParamId, BaseUri, ReferenceResourceTypeId, ReferenceResourceId, ReferenceResourceVersion };

        protected override void FillSqlDataRecord(global::Microsoft.Data.SqlClient.Server.SqlDataRecord record, BulkReferenceSearchParamTableTypeV1Row rowData)
        {
            Offset.Set(record, 0, rowData.Offset);
            SearchParamId.Set(record, 1, rowData.SearchParamId);
            BaseUri.Set(record, 2, rowData.BaseUri);
            ReferenceResourceTypeId.Set(record, 3, rowData.ReferenceResourceTypeId);
            ReferenceResourceId.Set(record, 4, rowData.ReferenceResourceId);
            ReferenceResourceVersion.Set(record, 5, rowData.ReferenceResourceVersion);
        }
    }

    internal struct BulkReferenceSearchParamTableTypeV1Row
    {
        internal BulkReferenceSearchParamTableTypeV1Row(System.Int32 Offset, System.Int16 SearchParamId, System.String BaseUri, System.Nullable<System.Int16> ReferenceResourceTypeId, System.String ReferenceResourceId, System.Nullable<System.Int32> ReferenceResourceVersion)
        {
            this.Offset = Offset;
            this.SearchParamId = SearchParamId;
            this.BaseUri = BaseUri;
            this.ReferenceResourceTypeId = ReferenceResourceTypeId;
            this.ReferenceResourceId = ReferenceResourceId;
            this.ReferenceResourceVersion = ReferenceResourceVersion;
        }

        internal System.Int32 Offset { get; }
        internal System.Int16 SearchParamId { get; }
        internal System.String BaseUri { get; }
        internal System.Nullable<System.Int16> ReferenceResourceTypeId { get; }
        internal System.String ReferenceResourceId { get; }
        internal System.Nullable<System.Int32> ReferenceResourceVersion { get; }
    }

    internal class BulkReferenceTokenCompositeSearchParamTableTypeV1TableValuedParameterDefinition : TableValuedParameterDefinition<BulkReferenceTokenCompositeSearchParamTableTypeV1Row>
    {
        internal BulkReferenceTokenCompositeSearchParamTableTypeV1TableValuedParameterDefinition(System.String parameterName) : base(parameterName, "dbo.BulkReferenceTokenCompositeSearchParamTableType_1")
        {
        }

        internal readonly IntColumn Offset = new IntColumn("Offset");
        internal readonly SmallIntColumn SearchParamId = new SmallIntColumn("SearchParamId");
        internal readonly NullableVarCharColumn BaseUri1 = new NullableVarCharColumn("BaseUri1", 128, "Latin1_General_100_CS_AS");
        internal readonly NullableSmallIntColumn ReferenceResourceTypeId1 = new NullableSmallIntColumn("ReferenceResourceTypeId1");
        internal readonly VarCharColumn ReferenceResourceId1 = new VarCharColumn("ReferenceResourceId1", 64, "Latin1_General_100_CS_AS");
        internal readonly NullableIntColumn ReferenceResourceVersion1 = new NullableIntColumn("ReferenceResourceVersion1");
        internal readonly NullableIntColumn SystemId2 = new NullableIntColumn("SystemId2");
        internal readonly VarCharColumn Code2 = new VarCharColumn("Code2", 128, "Latin1_General_100_CS_AS");

        protected override global::System.Collections.Generic.IEnumerable<Column> Columns => new Column[] { Offset, SearchParamId, BaseUri1, ReferenceResourceTypeId1, ReferenceResourceId1, ReferenceResourceVersion1, SystemId2, Code2 };

        protected override void FillSqlDataRecord(global::Microsoft.Data.SqlClient.Server.SqlDataRecord record, BulkReferenceTokenCompositeSearchParamTableTypeV1Row rowData)
        {
            Offset.Set(record, 0, rowData.Offset);
            SearchParamId.Set(record, 1, rowData.SearchParamId);
            BaseUri1.Set(record, 2, rowData.BaseUri1);
            ReferenceResourceTypeId1.Set(record, 3, rowData.ReferenceResourceTypeId1);
            ReferenceResourceId1.Set(record, 4, rowData.ReferenceResourceId1);
            ReferenceResourceVersion1.Set(record, 5, rowData.ReferenceResourceVersion1);
            SystemId2.Set(record, 6, rowData.SystemId2);
            Code2.Set(record, 7, rowData.Code2);
        }
    }

    internal struct BulkReferenceTokenCompositeSearchParamTableTypeV1Row
    {
        internal BulkReferenceTokenCompositeSearchParamTableTypeV1Row(System.Int32 Offset, System.Int16 SearchParamId, System.String BaseUri1, System.Nullable<System.Int16> ReferenceResourceTypeId1, System.String ReferenceResourceId1, System.Nullable<System.Int32> ReferenceResourceVersion1, System.Nullable<System.Int32> SystemId2, System.String Code2)
        {
            this.Offset = Offset;
            this.SearchParamId = SearchParamId;
            this.BaseUri1 = BaseUri1;
            this.ReferenceResourceTypeId1 = ReferenceResourceTypeId1;
            this.ReferenceResourceId1 = ReferenceResourceId1;
            this.ReferenceResourceVersion1 = ReferenceResourceVersion1;
            this.SystemId2 = SystemId2;
            this.Code2 = Code2;
        }

        internal System.Int32 Offset { get; }
        internal System.Int16 SearchParamId { get; }
        internal System.String BaseUri1 { get; }
        internal System.Nullable<System.Int16> ReferenceResourceTypeId1 { get; }
        internal System.String ReferenceResourceId1 { get; }
        internal System.Nullable<System.Int32> ReferenceResourceVersion1 { get; }
        internal System.Nullable<System.Int32> SystemId2 { get; }
        internal System.String Code2 { get; }
    }

    internal class BulkReferenceTokenCompositeSearchParamTableTypeV2TableValuedParameterDefinition : TableValuedParameterDefinition<BulkReferenceTokenCompositeSearchParamTableTypeV2Row>
    {
        internal BulkReferenceTokenCompositeSearchParamTableTypeV2TableValuedParameterDefinition(System.String parameterName) : base(parameterName, "dbo.BulkReferenceTokenCompositeSearchParamTableType_2")
        {
        }

        internal readonly IntColumn Offset = new IntColumn("Offset");
        internal readonly SmallIntColumn SearchParamId = new SmallIntColumn("SearchParamId");
        internal readonly NullableVarCharColumn BaseUri1 = new NullableVarCharColumn("BaseUri1", 128, "Latin1_General_100_CS_AS");
        internal readonly NullableSmallIntColumn ReferenceResourceTypeId1 = new NullableSmallIntColumn("ReferenceResourceTypeId1");
        internal readonly VarCharColumn ReferenceResourceId1 = new VarCharColumn("ReferenceResourceId1", 64, "Latin1_General_100_CS_AS");
        internal readonly NullableIntColumn ReferenceResourceVersion1 = new NullableIntColumn("ReferenceResourceVersion1");
        internal readonly NullableIntColumn SystemId2 = new NullableIntColumn("SystemId2");
        internal readonly VarCharColumn Code2 = new VarCharColumn("Code2", 256, "Latin1_General_100_CS_AS");
        internal readonly NullableVarCharColumn CodeOverflow2 = new NullableVarCharColumn("CodeOverflow2", -1, "Latin1_General_100_CS_AS");

        protected override global::System.Collections.Generic.IEnumerable<Column> Columns => new Column[] { Offset, SearchParamId, BaseUri1, ReferenceResourceTypeId1, ReferenceResourceId1, ReferenceResourceVersion1, SystemId2, Code2, CodeOverflow2 };

        protected override void FillSqlDataRecord(global::Microsoft.Data.SqlClient.Server.SqlDataRecord record, BulkReferenceTokenCompositeSearchParamTableTypeV2Row rowData)
        {
            Offset.Set(record, 0, rowData.Offset);
            SearchParamId.Set(record, 1, rowData.SearchParamId);
            BaseUri1.Set(record, 2, rowData.BaseUri1);
            ReferenceResourceTypeId1.Set(record, 3, rowData.ReferenceResourceTypeId1);
            ReferenceResourceId1.Set(record, 4, rowData.ReferenceResourceId1);
            ReferenceResourceVersion1.Set(record, 5, rowData.ReferenceResourceVersion1);
            SystemId2.Set(record, 6, rowData.SystemId2);
            Code2.Set(record, 7, rowData.Code2);
            CodeOverflow2.Set(record, 8, rowData.CodeOverflow2);
        }
    }

    internal struct BulkReferenceTokenCompositeSearchParamTableTypeV2Row
    {
        internal BulkReferenceTokenCompositeSearchParamTableTypeV2Row(System.Int32 Offset, System.Int16 SearchParamId, System.String BaseUri1, System.Nullable<System.Int16> ReferenceResourceTypeId1, System.String ReferenceResourceId1, System.Nullable<System.Int32> ReferenceResourceVersion1, System.Nullable<System.Int32> SystemId2, System.String Code2, System.String CodeOverflow2)
        {
            this.Offset = Offset;
            this.SearchParamId = SearchParamId;
            this.BaseUri1 = BaseUri1;
            this.ReferenceResourceTypeId1 = ReferenceResourceTypeId1;
            this.ReferenceResourceId1 = ReferenceResourceId1;
            this.ReferenceResourceVersion1 = ReferenceResourceVersion1;
            this.SystemId2 = SystemId2;
            this.Code2 = Code2;
            this.CodeOverflow2 = CodeOverflow2;
        }

        internal System.Int32 Offset { get; }
        internal System.Int16 SearchParamId { get; }
        internal System.String BaseUri1 { get; }
        internal System.Nullable<System.Int16> ReferenceResourceTypeId1 { get; }
        internal System.String ReferenceResourceId1 { get; }
        internal System.Nullable<System.Int32> ReferenceResourceVersion1 { get; }
        internal System.Nullable<System.Int32> SystemId2 { get; }
        internal System.String Code2 { get; }
        internal System.String CodeOverflow2 { get; }
    }

    internal class BulkReindexResourceTableTypeV1TableValuedParameterDefinition : TableValuedParameterDefinition<BulkReindexResourceTableTypeV1Row>
    {
        internal BulkReindexResourceTableTypeV1TableValuedParameterDefinition(System.String parameterName) : base(parameterName, "dbo.BulkReindexResourceTableType_1")
        {
        }

        internal readonly IntColumn Offset = new IntColumn("Offset");
        internal readonly SmallIntColumn ResourceTypeId = new SmallIntColumn("ResourceTypeId");
        internal readonly VarCharColumn ResourceId = new VarCharColumn("ResourceId", 64, "Latin1_General_100_CS_AS");
        internal readonly NullableIntColumn ETag = new NullableIntColumn("ETag");
        internal readonly VarCharColumn SearchParamHash = new VarCharColumn("SearchParamHash", 64);

        protected override global::System.Collections.Generic.IEnumerable<Column> Columns => new Column[] { Offset, ResourceTypeId, ResourceId, ETag, SearchParamHash };

        protected override void FillSqlDataRecord(global::Microsoft.Data.SqlClient.Server.SqlDataRecord record, BulkReindexResourceTableTypeV1Row rowData)
        {
            Offset.Set(record, 0, rowData.Offset);
            ResourceTypeId.Set(record, 1, rowData.ResourceTypeId);
            ResourceId.Set(record, 2, rowData.ResourceId);
            ETag.Set(record, 3, rowData.ETag);
            SearchParamHash.Set(record, 4, rowData.SearchParamHash);
        }
    }

    internal struct BulkReindexResourceTableTypeV1Row
    {
        internal BulkReindexResourceTableTypeV1Row(System.Int32 Offset, System.Int16 ResourceTypeId, System.String ResourceId, System.Nullable<System.Int32> ETag, System.String SearchParamHash)
        {
            this.Offset = Offset;
            this.ResourceTypeId = ResourceTypeId;
            this.ResourceId = ResourceId;
            this.ETag = ETag;
            this.SearchParamHash = SearchParamHash;
        }

        internal System.Int32 Offset { get; }
        internal System.Int16 ResourceTypeId { get; }
        internal System.String ResourceId { get; }
        internal System.Nullable<System.Int32> ETag { get; }
        internal System.String SearchParamHash { get; }
    }

    internal class BulkResourceWriteClaimTableTypeV1TableValuedParameterDefinition : TableValuedParameterDefinition<BulkResourceWriteClaimTableTypeV1Row>
    {
        internal BulkResourceWriteClaimTableTypeV1TableValuedParameterDefinition(System.String parameterName) : base(parameterName, "dbo.BulkResourceWriteClaimTableType_1")
        {
        }

        internal readonly IntColumn Offset = new IntColumn("Offset");
        internal readonly TinyIntColumn ClaimTypeId = new TinyIntColumn("ClaimTypeId");
        internal readonly NVarCharColumn ClaimValue = new NVarCharColumn("ClaimValue", 128);

        protected override global::System.Collections.Generic.IEnumerable<Column> Columns => new Column[] { Offset, ClaimTypeId, ClaimValue };

        protected override void FillSqlDataRecord(global::Microsoft.Data.SqlClient.Server.SqlDataRecord record, BulkResourceWriteClaimTableTypeV1Row rowData)
        {
            Offset.Set(record, 0, rowData.Offset);
            ClaimTypeId.Set(record, 1, rowData.ClaimTypeId);
            ClaimValue.Set(record, 2, rowData.ClaimValue);
        }
    }

    internal struct BulkResourceWriteClaimTableTypeV1Row
    {
        internal BulkResourceWriteClaimTableTypeV1Row(System.Int32 Offset, System.Byte ClaimTypeId, System.String ClaimValue)
        {
            this.Offset = Offset;
            this.ClaimTypeId = ClaimTypeId;
            this.ClaimValue = ClaimValue;
        }

        internal System.Int32 Offset { get; }
        internal System.Byte ClaimTypeId { get; }
        internal System.String ClaimValue { get; }
    }

    internal class BulkStringSearchParamTableTypeV1TableValuedParameterDefinition : TableValuedParameterDefinition<BulkStringSearchParamTableTypeV1Row>
    {
        internal BulkStringSearchParamTableTypeV1TableValuedParameterDefinition(System.String parameterName) : base(parameterName, "dbo.BulkStringSearchParamTableType_1")
        {
        }

        internal readonly IntColumn Offset = new IntColumn("Offset");
        internal readonly SmallIntColumn SearchParamId = new SmallIntColumn("SearchParamId");
        internal readonly NVarCharColumn Text = new NVarCharColumn("Text", 256, "Latin1_General_100_CI_AI_SC");
        internal readonly NullableNVarCharColumn TextOverflow = new NullableNVarCharColumn("TextOverflow", -1, "Latin1_General_100_CI_AI_SC");

        protected override global::System.Collections.Generic.IEnumerable<Column> Columns => new Column[] { Offset, SearchParamId, Text, TextOverflow };

        protected override void FillSqlDataRecord(global::Microsoft.Data.SqlClient.Server.SqlDataRecord record, BulkStringSearchParamTableTypeV1Row rowData)
        {
            Offset.Set(record, 0, rowData.Offset);
            SearchParamId.Set(record, 1, rowData.SearchParamId);
            Text.Set(record, 2, rowData.Text);
            TextOverflow.Set(record, 3, rowData.TextOverflow);
        }
    }

    internal struct BulkStringSearchParamTableTypeV1Row
    {
        internal BulkStringSearchParamTableTypeV1Row(System.Int32 Offset, System.Int16 SearchParamId, System.String Text, System.String TextOverflow)
        {
            this.Offset = Offset;
            this.SearchParamId = SearchParamId;
            this.Text = Text;
            this.TextOverflow = TextOverflow;
        }

        internal System.Int32 Offset { get; }
        internal System.Int16 SearchParamId { get; }
        internal System.String Text { get; }
        internal System.String TextOverflow { get; }
    }

    internal class BulkStringSearchParamTableTypeV2TableValuedParameterDefinition : TableValuedParameterDefinition<BulkStringSearchParamTableTypeV2Row>
    {
        internal BulkStringSearchParamTableTypeV2TableValuedParameterDefinition(System.String parameterName) : base(parameterName, "dbo.BulkStringSearchParamTableType_2")
        {
        }

        internal readonly IntColumn Offset = new IntColumn("Offset");
        internal readonly SmallIntColumn SearchParamId = new SmallIntColumn("SearchParamId");
        internal readonly NVarCharColumn Text = new NVarCharColumn("Text", 256, "Latin1_General_100_CI_AI_SC");
        internal readonly NullableNVarCharColumn TextOverflow = new NullableNVarCharColumn("TextOverflow", -1, "Latin1_General_100_CI_AI_SC");
        internal readonly BitColumn IsMin = new BitColumn("IsMin");
        internal readonly BitColumn IsMax = new BitColumn("IsMax");

        protected override global::System.Collections.Generic.IEnumerable<Column> Columns => new Column[] { Offset, SearchParamId, Text, TextOverflow, IsMin, IsMax };

        protected override void FillSqlDataRecord(global::Microsoft.Data.SqlClient.Server.SqlDataRecord record, BulkStringSearchParamTableTypeV2Row rowData)
        {
            Offset.Set(record, 0, rowData.Offset);
            SearchParamId.Set(record, 1, rowData.SearchParamId);
            Text.Set(record, 2, rowData.Text);
            TextOverflow.Set(record, 3, rowData.TextOverflow);
            IsMin.Set(record, 4, rowData.IsMin);
            IsMax.Set(record, 5, rowData.IsMax);
        }
    }

    internal struct BulkStringSearchParamTableTypeV2Row
    {
        internal BulkStringSearchParamTableTypeV2Row(System.Int32 Offset, System.Int16 SearchParamId, System.String Text, System.String TextOverflow, System.Boolean IsMin, System.Boolean IsMax)
        {
            this.Offset = Offset;
            this.SearchParamId = SearchParamId;
            this.Text = Text;
            this.TextOverflow = TextOverflow;
            this.IsMin = IsMin;
            this.IsMax = IsMax;
        }

        internal System.Int32 Offset { get; }
        internal System.Int16 SearchParamId { get; }
        internal System.String Text { get; }
        internal System.String TextOverflow { get; }
        internal System.Boolean IsMin { get; }
        internal System.Boolean IsMax { get; }
    }

    internal class BulkTokenDateTimeCompositeSearchParamTableTypeV1TableValuedParameterDefinition : TableValuedParameterDefinition<BulkTokenDateTimeCompositeSearchParamTableTypeV1Row>
    {
        internal BulkTokenDateTimeCompositeSearchParamTableTypeV1TableValuedParameterDefinition(System.String parameterName) : base(parameterName, "dbo.BulkTokenDateTimeCompositeSearchParamTableType_1")
        {
        }

        internal readonly IntColumn Offset = new IntColumn("Offset");
        internal readonly SmallIntColumn SearchParamId = new SmallIntColumn("SearchParamId");
        internal readonly NullableIntColumn SystemId1 = new NullableIntColumn("SystemId1");
        internal readonly VarCharColumn Code1 = new VarCharColumn("Code1", 128, "Latin1_General_100_CS_AS");
        internal readonly DateTimeOffsetColumn StartDateTime2 = new DateTimeOffsetColumn("StartDateTime2", 7);
        internal readonly DateTimeOffsetColumn EndDateTime2 = new DateTimeOffsetColumn("EndDateTime2", 7);
        internal readonly BitColumn IsLongerThanADay2 = new BitColumn("IsLongerThanADay2");

        protected override global::System.Collections.Generic.IEnumerable<Column> Columns => new Column[] { Offset, SearchParamId, SystemId1, Code1, StartDateTime2, EndDateTime2, IsLongerThanADay2 };

        protected override void FillSqlDataRecord(global::Microsoft.Data.SqlClient.Server.SqlDataRecord record, BulkTokenDateTimeCompositeSearchParamTableTypeV1Row rowData)
        {
            Offset.Set(record, 0, rowData.Offset);
            SearchParamId.Set(record, 1, rowData.SearchParamId);
            SystemId1.Set(record, 2, rowData.SystemId1);
            Code1.Set(record, 3, rowData.Code1);
            StartDateTime2.Set(record, 4, rowData.StartDateTime2);
            EndDateTime2.Set(record, 5, rowData.EndDateTime2);
            IsLongerThanADay2.Set(record, 6, rowData.IsLongerThanADay2);
        }
    }

    internal struct BulkTokenDateTimeCompositeSearchParamTableTypeV1Row
    {
        internal BulkTokenDateTimeCompositeSearchParamTableTypeV1Row(System.Int32 Offset, System.Int16 SearchParamId, System.Nullable<System.Int32> SystemId1, System.String Code1, System.DateTimeOffset StartDateTime2, System.DateTimeOffset EndDateTime2, System.Boolean IsLongerThanADay2)
        {
            this.Offset = Offset;
            this.SearchParamId = SearchParamId;
            this.SystemId1 = SystemId1;
            this.Code1 = Code1;
            this.StartDateTime2 = StartDateTime2;
            this.EndDateTime2 = EndDateTime2;
            this.IsLongerThanADay2 = IsLongerThanADay2;
        }

        internal System.Int32 Offset { get; }
        internal System.Int16 SearchParamId { get; }
        internal System.Nullable<System.Int32> SystemId1 { get; }
        internal System.String Code1 { get; }
        internal System.DateTimeOffset StartDateTime2 { get; }
        internal System.DateTimeOffset EndDateTime2 { get; }
        internal System.Boolean IsLongerThanADay2 { get; }
    }

    internal class BulkTokenDateTimeCompositeSearchParamTableTypeV2TableValuedParameterDefinition : TableValuedParameterDefinition<BulkTokenDateTimeCompositeSearchParamTableTypeV2Row>
    {
        internal BulkTokenDateTimeCompositeSearchParamTableTypeV2TableValuedParameterDefinition(System.String parameterName) : base(parameterName, "dbo.BulkTokenDateTimeCompositeSearchParamTableType_2")
        {
        }

        internal readonly IntColumn Offset = new IntColumn("Offset");
        internal readonly SmallIntColumn SearchParamId = new SmallIntColumn("SearchParamId");
        internal readonly NullableIntColumn SystemId1 = new NullableIntColumn("SystemId1");
        internal readonly VarCharColumn Code1 = new VarCharColumn("Code1", 256, "Latin1_General_100_CS_AS");
        internal readonly NullableVarCharColumn CodeOverflow1 = new NullableVarCharColumn("CodeOverflow1", -1, "Latin1_General_100_CS_AS");
        internal readonly DateTimeOffsetColumn StartDateTime2 = new DateTimeOffsetColumn("StartDateTime2", 7);
        internal readonly DateTimeOffsetColumn EndDateTime2 = new DateTimeOffsetColumn("EndDateTime2", 7);
        internal readonly BitColumn IsLongerThanADay2 = new BitColumn("IsLongerThanADay2");

        protected override global::System.Collections.Generic.IEnumerable<Column> Columns => new Column[] { Offset, SearchParamId, SystemId1, Code1, CodeOverflow1, StartDateTime2, EndDateTime2, IsLongerThanADay2 };

        protected override void FillSqlDataRecord(global::Microsoft.Data.SqlClient.Server.SqlDataRecord record, BulkTokenDateTimeCompositeSearchParamTableTypeV2Row rowData)
        {
            Offset.Set(record, 0, rowData.Offset);
            SearchParamId.Set(record, 1, rowData.SearchParamId);
            SystemId1.Set(record, 2, rowData.SystemId1);
            Code1.Set(record, 3, rowData.Code1);
            CodeOverflow1.Set(record, 4, rowData.CodeOverflow1);
            StartDateTime2.Set(record, 5, rowData.StartDateTime2);
            EndDateTime2.Set(record, 6, rowData.EndDateTime2);
            IsLongerThanADay2.Set(record, 7, rowData.IsLongerThanADay2);
        }
    }

    internal struct BulkTokenDateTimeCompositeSearchParamTableTypeV2Row
    {
        internal BulkTokenDateTimeCompositeSearchParamTableTypeV2Row(System.Int32 Offset, System.Int16 SearchParamId, System.Nullable<System.Int32> SystemId1, System.String Code1, System.String CodeOverflow1, System.DateTimeOffset StartDateTime2, System.DateTimeOffset EndDateTime2, System.Boolean IsLongerThanADay2)
        {
            this.Offset = Offset;
            this.SearchParamId = SearchParamId;
            this.SystemId1 = SystemId1;
            this.Code1 = Code1;
            this.CodeOverflow1 = CodeOverflow1;
            this.StartDateTime2 = StartDateTime2;
            this.EndDateTime2 = EndDateTime2;
            this.IsLongerThanADay2 = IsLongerThanADay2;
        }

        internal System.Int32 Offset { get; }
        internal System.Int16 SearchParamId { get; }
        internal System.Nullable<System.Int32> SystemId1 { get; }
        internal System.String Code1 { get; }
        internal System.String CodeOverflow1 { get; }
        internal System.DateTimeOffset StartDateTime2 { get; }
        internal System.DateTimeOffset EndDateTime2 { get; }
        internal System.Boolean IsLongerThanADay2 { get; }
    }

    internal class BulkTokenNumberNumberCompositeSearchParamTableTypeV1TableValuedParameterDefinition : TableValuedParameterDefinition<BulkTokenNumberNumberCompositeSearchParamTableTypeV1Row>
    {
        internal BulkTokenNumberNumberCompositeSearchParamTableTypeV1TableValuedParameterDefinition(System.String parameterName) : base(parameterName, "dbo.BulkTokenNumberNumberCompositeSearchParamTableType_1")
        {
        }

        internal readonly IntColumn Offset = new IntColumn("Offset");
        internal readonly SmallIntColumn SearchParamId = new SmallIntColumn("SearchParamId");
        internal readonly NullableIntColumn SystemId1 = new NullableIntColumn("SystemId1");
        internal readonly VarCharColumn Code1 = new VarCharColumn("Code1", 128, "Latin1_General_100_CS_AS");
        internal readonly NullableDecimalColumn SingleValue2 = new NullableDecimalColumn("SingleValue2", 18, 6);
        internal readonly NullableDecimalColumn LowValue2 = new NullableDecimalColumn("LowValue2", 18, 6);
        internal readonly NullableDecimalColumn HighValue2 = new NullableDecimalColumn("HighValue2", 18, 6);
        internal readonly NullableDecimalColumn SingleValue3 = new NullableDecimalColumn("SingleValue3", 18, 6);
        internal readonly NullableDecimalColumn LowValue3 = new NullableDecimalColumn("LowValue3", 18, 6);
        internal readonly NullableDecimalColumn HighValue3 = new NullableDecimalColumn("HighValue3", 18, 6);
        internal readonly BitColumn HasRange = new BitColumn("HasRange");

        protected override global::System.Collections.Generic.IEnumerable<Column> Columns => new Column[] { Offset, SearchParamId, SystemId1, Code1, SingleValue2, LowValue2, HighValue2, SingleValue3, LowValue3, HighValue3, HasRange };

        protected override void FillSqlDataRecord(global::Microsoft.Data.SqlClient.Server.SqlDataRecord record, BulkTokenNumberNumberCompositeSearchParamTableTypeV1Row rowData)
        {
            Offset.Set(record, 0, rowData.Offset);
            SearchParamId.Set(record, 1, rowData.SearchParamId);
            SystemId1.Set(record, 2, rowData.SystemId1);
            Code1.Set(record, 3, rowData.Code1);
            SingleValue2.Set(record, 4, rowData.SingleValue2);
            LowValue2.Set(record, 5, rowData.LowValue2);
            HighValue2.Set(record, 6, rowData.HighValue2);
            SingleValue3.Set(record, 7, rowData.SingleValue3);
            LowValue3.Set(record, 8, rowData.LowValue3);
            HighValue3.Set(record, 9, rowData.HighValue3);
            HasRange.Set(record, 10, rowData.HasRange);
        }
    }

    internal struct BulkTokenNumberNumberCompositeSearchParamTableTypeV1Row
    {
        internal BulkTokenNumberNumberCompositeSearchParamTableTypeV1Row(System.Int32 Offset, System.Int16 SearchParamId, System.Nullable<System.Int32> SystemId1, System.String Code1, System.Nullable<System.Decimal> SingleValue2, System.Nullable<System.Decimal> LowValue2, System.Nullable<System.Decimal> HighValue2, System.Nullable<System.Decimal> SingleValue3, System.Nullable<System.Decimal> LowValue3, System.Nullable<System.Decimal> HighValue3, System.Boolean HasRange)
        {
            this.Offset = Offset;
            this.SearchParamId = SearchParamId;
            this.SystemId1 = SystemId1;
            this.Code1 = Code1;
            this.SingleValue2 = SingleValue2;
            this.LowValue2 = LowValue2;
            this.HighValue2 = HighValue2;
            this.SingleValue3 = SingleValue3;
            this.LowValue3 = LowValue3;
            this.HighValue3 = HighValue3;
            this.HasRange = HasRange;
        }

        internal System.Int32 Offset { get; }
        internal System.Int16 SearchParamId { get; }
        internal System.Nullable<System.Int32> SystemId1 { get; }
        internal System.String Code1 { get; }
        internal System.Nullable<System.Decimal> SingleValue2 { get; }
        internal System.Nullable<System.Decimal> LowValue2 { get; }
        internal System.Nullable<System.Decimal> HighValue2 { get; }
        internal System.Nullable<System.Decimal> SingleValue3 { get; }
        internal System.Nullable<System.Decimal> LowValue3 { get; }
        internal System.Nullable<System.Decimal> HighValue3 { get; }
        internal System.Boolean HasRange { get; }
    }

    internal class BulkTokenNumberNumberCompositeSearchParamTableTypeV2TableValuedParameterDefinition : TableValuedParameterDefinition<BulkTokenNumberNumberCompositeSearchParamTableTypeV2Row>
    {
        internal BulkTokenNumberNumberCompositeSearchParamTableTypeV2TableValuedParameterDefinition(System.String parameterName) : base(parameterName, "dbo.BulkTokenNumberNumberCompositeSearchParamTableType_2")
        {
        }

        internal readonly IntColumn Offset = new IntColumn("Offset");
        internal readonly SmallIntColumn SearchParamId = new SmallIntColumn("SearchParamId");
        internal readonly NullableIntColumn SystemId1 = new NullableIntColumn("SystemId1");
        internal readonly VarCharColumn Code1 = new VarCharColumn("Code1", 256, "Latin1_General_100_CS_AS");
        internal readonly NullableVarCharColumn CodeOverflow1 = new NullableVarCharColumn("CodeOverflow1", -1, "Latin1_General_100_CS_AS");
        internal readonly NullableDecimalColumn SingleValue2 = new NullableDecimalColumn("SingleValue2", 18, 6);
        internal readonly NullableDecimalColumn LowValue2 = new NullableDecimalColumn("LowValue2", 18, 6);
        internal readonly NullableDecimalColumn HighValue2 = new NullableDecimalColumn("HighValue2", 18, 6);
        internal readonly NullableDecimalColumn SingleValue3 = new NullableDecimalColumn("SingleValue3", 18, 6);
        internal readonly NullableDecimalColumn LowValue3 = new NullableDecimalColumn("LowValue3", 18, 6);
        internal readonly NullableDecimalColumn HighValue3 = new NullableDecimalColumn("HighValue3", 18, 6);
        internal readonly BitColumn HasRange = new BitColumn("HasRange");

        protected override global::System.Collections.Generic.IEnumerable<Column> Columns => new Column[] { Offset, SearchParamId, SystemId1, Code1, CodeOverflow1, SingleValue2, LowValue2, HighValue2, SingleValue3, LowValue3, HighValue3, HasRange };

        protected override void FillSqlDataRecord(global::Microsoft.Data.SqlClient.Server.SqlDataRecord record, BulkTokenNumberNumberCompositeSearchParamTableTypeV2Row rowData)
        {
            Offset.Set(record, 0, rowData.Offset);
            SearchParamId.Set(record, 1, rowData.SearchParamId);
            SystemId1.Set(record, 2, rowData.SystemId1);
            Code1.Set(record, 3, rowData.Code1);
            CodeOverflow1.Set(record, 4, rowData.CodeOverflow1);
            SingleValue2.Set(record, 5, rowData.SingleValue2);
            LowValue2.Set(record, 6, rowData.LowValue2);
            HighValue2.Set(record, 7, rowData.HighValue2);
            SingleValue3.Set(record, 8, rowData.SingleValue3);
            LowValue3.Set(record, 9, rowData.LowValue3);
            HighValue3.Set(record, 10, rowData.HighValue3);
            HasRange.Set(record, 11, rowData.HasRange);
        }
    }

    internal struct BulkTokenNumberNumberCompositeSearchParamTableTypeV2Row
    {
        internal BulkTokenNumberNumberCompositeSearchParamTableTypeV2Row(System.Int32 Offset, System.Int16 SearchParamId, System.Nullable<System.Int32> SystemId1, System.String Code1, System.String CodeOverflow1, System.Nullable<System.Decimal> SingleValue2, System.Nullable<System.Decimal> LowValue2, System.Nullable<System.Decimal> HighValue2, System.Nullable<System.Decimal> SingleValue3, System.Nullable<System.Decimal> LowValue3, System.Nullable<System.Decimal> HighValue3, System.Boolean HasRange)
        {
            this.Offset = Offset;
            this.SearchParamId = SearchParamId;
            this.SystemId1 = SystemId1;
            this.Code1 = Code1;
            this.CodeOverflow1 = CodeOverflow1;
            this.SingleValue2 = SingleValue2;
            this.LowValue2 = LowValue2;
            this.HighValue2 = HighValue2;
            this.SingleValue3 = SingleValue3;
            this.LowValue3 = LowValue3;
            this.HighValue3 = HighValue3;
            this.HasRange = HasRange;
        }

        internal System.Int32 Offset { get; }
        internal System.Int16 SearchParamId { get; }
        internal System.Nullable<System.Int32> SystemId1 { get; }
        internal System.String Code1 { get; }
        internal System.String CodeOverflow1 { get; }
        internal System.Nullable<System.Decimal> SingleValue2 { get; }
        internal System.Nullable<System.Decimal> LowValue2 { get; }
        internal System.Nullable<System.Decimal> HighValue2 { get; }
        internal System.Nullable<System.Decimal> SingleValue3 { get; }
        internal System.Nullable<System.Decimal> LowValue3 { get; }
        internal System.Nullable<System.Decimal> HighValue3 { get; }
        internal System.Boolean HasRange { get; }
    }

    internal class BulkTokenQuantityCompositeSearchParamTableTypeV1TableValuedParameterDefinition : TableValuedParameterDefinition<BulkTokenQuantityCompositeSearchParamTableTypeV1Row>
    {
        internal BulkTokenQuantityCompositeSearchParamTableTypeV1TableValuedParameterDefinition(System.String parameterName) : base(parameterName, "dbo.BulkTokenQuantityCompositeSearchParamTableType_1")
        {
        }

        internal readonly IntColumn Offset = new IntColumn("Offset");
        internal readonly SmallIntColumn SearchParamId = new SmallIntColumn("SearchParamId");
        internal readonly NullableIntColumn SystemId1 = new NullableIntColumn("SystemId1");
        internal readonly VarCharColumn Code1 = new VarCharColumn("Code1", 128, "Latin1_General_100_CS_AS");
        internal readonly NullableIntColumn SystemId2 = new NullableIntColumn("SystemId2");
        internal readonly NullableIntColumn QuantityCodeId2 = new NullableIntColumn("QuantityCodeId2");
        internal readonly NullableDecimalColumn SingleValue2 = new NullableDecimalColumn("SingleValue2", 18, 6);
        internal readonly NullableDecimalColumn LowValue2 = new NullableDecimalColumn("LowValue2", 18, 6);
        internal readonly NullableDecimalColumn HighValue2 = new NullableDecimalColumn("HighValue2", 18, 6);

        protected override global::System.Collections.Generic.IEnumerable<Column> Columns => new Column[] { Offset, SearchParamId, SystemId1, Code1, SystemId2, QuantityCodeId2, SingleValue2, LowValue2, HighValue2 };

        protected override void FillSqlDataRecord(global::Microsoft.Data.SqlClient.Server.SqlDataRecord record, BulkTokenQuantityCompositeSearchParamTableTypeV1Row rowData)
        {
            Offset.Set(record, 0, rowData.Offset);
            SearchParamId.Set(record, 1, rowData.SearchParamId);
            SystemId1.Set(record, 2, rowData.SystemId1);
            Code1.Set(record, 3, rowData.Code1);
            SystemId2.Set(record, 4, rowData.SystemId2);
            QuantityCodeId2.Set(record, 5, rowData.QuantityCodeId2);
            SingleValue2.Set(record, 6, rowData.SingleValue2);
            LowValue2.Set(record, 7, rowData.LowValue2);
            HighValue2.Set(record, 8, rowData.HighValue2);
        }
    }

    internal struct BulkTokenQuantityCompositeSearchParamTableTypeV1Row
    {
        internal BulkTokenQuantityCompositeSearchParamTableTypeV1Row(System.Int32 Offset, System.Int16 SearchParamId, System.Nullable<System.Int32> SystemId1, System.String Code1, System.Nullable<System.Int32> SystemId2, System.Nullable<System.Int32> QuantityCodeId2, System.Nullable<System.Decimal> SingleValue2, System.Nullable<System.Decimal> LowValue2, System.Nullable<System.Decimal> HighValue2)
        {
            this.Offset = Offset;
            this.SearchParamId = SearchParamId;
            this.SystemId1 = SystemId1;
            this.Code1 = Code1;
            this.SystemId2 = SystemId2;
            this.QuantityCodeId2 = QuantityCodeId2;
            this.SingleValue2 = SingleValue2;
            this.LowValue2 = LowValue2;
            this.HighValue2 = HighValue2;
        }

        internal System.Int32 Offset { get; }
        internal System.Int16 SearchParamId { get; }
        internal System.Nullable<System.Int32> SystemId1 { get; }
        internal System.String Code1 { get; }
        internal System.Nullable<System.Int32> SystemId2 { get; }
        internal System.Nullable<System.Int32> QuantityCodeId2 { get; }
        internal System.Nullable<System.Decimal> SingleValue2 { get; }
        internal System.Nullable<System.Decimal> LowValue2 { get; }
        internal System.Nullable<System.Decimal> HighValue2 { get; }
    }

    internal class BulkTokenQuantityCompositeSearchParamTableTypeV2TableValuedParameterDefinition : TableValuedParameterDefinition<BulkTokenQuantityCompositeSearchParamTableTypeV2Row>
    {
        internal BulkTokenQuantityCompositeSearchParamTableTypeV2TableValuedParameterDefinition(System.String parameterName) : base(parameterName, "dbo.BulkTokenQuantityCompositeSearchParamTableType_2")
        {
        }

        internal readonly IntColumn Offset = new IntColumn("Offset");
        internal readonly SmallIntColumn SearchParamId = new SmallIntColumn("SearchParamId");
        internal readonly NullableIntColumn SystemId1 = new NullableIntColumn("SystemId1");
        internal readonly VarCharColumn Code1 = new VarCharColumn("Code1", 256, "Latin1_General_100_CS_AS");
        internal readonly NullableVarCharColumn CodeOverflow1 = new NullableVarCharColumn("CodeOverflow1", -1, "Latin1_General_100_CS_AS");
        internal readonly NullableIntColumn SystemId2 = new NullableIntColumn("SystemId2");
        internal readonly NullableIntColumn QuantityCodeId2 = new NullableIntColumn("QuantityCodeId2");
        internal readonly NullableDecimalColumn SingleValue2 = new NullableDecimalColumn("SingleValue2", 18, 6);
        internal readonly NullableDecimalColumn LowValue2 = new NullableDecimalColumn("LowValue2", 18, 6);
        internal readonly NullableDecimalColumn HighValue2 = new NullableDecimalColumn("HighValue2", 18, 6);

        protected override global::System.Collections.Generic.IEnumerable<Column> Columns => new Column[] { Offset, SearchParamId, SystemId1, Code1, CodeOverflow1, SystemId2, QuantityCodeId2, SingleValue2, LowValue2, HighValue2 };

        protected override void FillSqlDataRecord(global::Microsoft.Data.SqlClient.Server.SqlDataRecord record, BulkTokenQuantityCompositeSearchParamTableTypeV2Row rowData)
        {
            Offset.Set(record, 0, rowData.Offset);
            SearchParamId.Set(record, 1, rowData.SearchParamId);
            SystemId1.Set(record, 2, rowData.SystemId1);
            Code1.Set(record, 3, rowData.Code1);
            CodeOverflow1.Set(record, 4, rowData.CodeOverflow1);
            SystemId2.Set(record, 5, rowData.SystemId2);
            QuantityCodeId2.Set(record, 6, rowData.QuantityCodeId2);
            SingleValue2.Set(record, 7, rowData.SingleValue2);
            LowValue2.Set(record, 8, rowData.LowValue2);
            HighValue2.Set(record, 9, rowData.HighValue2);
        }
    }

    internal struct BulkTokenQuantityCompositeSearchParamTableTypeV2Row
    {
        internal BulkTokenQuantityCompositeSearchParamTableTypeV2Row(System.Int32 Offset, System.Int16 SearchParamId, System.Nullable<System.Int32> SystemId1, System.String Code1, System.String CodeOverflow1, System.Nullable<System.Int32> SystemId2, System.Nullable<System.Int32> QuantityCodeId2, System.Nullable<System.Decimal> SingleValue2, System.Nullable<System.Decimal> LowValue2, System.Nullable<System.Decimal> HighValue2)
        {
            this.Offset = Offset;
            this.SearchParamId = SearchParamId;
            this.SystemId1 = SystemId1;
            this.Code1 = Code1;
            this.CodeOverflow1 = CodeOverflow1;
            this.SystemId2 = SystemId2;
            this.QuantityCodeId2 = QuantityCodeId2;
            this.SingleValue2 = SingleValue2;
            this.LowValue2 = LowValue2;
            this.HighValue2 = HighValue2;
        }

        internal System.Int32 Offset { get; }
        internal System.Int16 SearchParamId { get; }
        internal System.Nullable<System.Int32> SystemId1 { get; }
        internal System.String Code1 { get; }
        internal System.String CodeOverflow1 { get; }
        internal System.Nullable<System.Int32> SystemId2 { get; }
        internal System.Nullable<System.Int32> QuantityCodeId2 { get; }
        internal System.Nullable<System.Decimal> SingleValue2 { get; }
        internal System.Nullable<System.Decimal> LowValue2 { get; }
        internal System.Nullable<System.Decimal> HighValue2 { get; }
    }

    internal class BulkTokenSearchParamTableTypeV1TableValuedParameterDefinition : TableValuedParameterDefinition<BulkTokenSearchParamTableTypeV1Row>
    {
        internal BulkTokenSearchParamTableTypeV1TableValuedParameterDefinition(System.String parameterName) : base(parameterName, "dbo.BulkTokenSearchParamTableType_1")
        {
        }

        internal readonly IntColumn Offset = new IntColumn("Offset");
        internal readonly SmallIntColumn SearchParamId = new SmallIntColumn("SearchParamId");
        internal readonly NullableIntColumn SystemId = new NullableIntColumn("SystemId");
        internal readonly VarCharColumn Code = new VarCharColumn("Code", 128, "Latin1_General_100_CS_AS");

        protected override global::System.Collections.Generic.IEnumerable<Column> Columns => new Column[] { Offset, SearchParamId, SystemId, Code };

        protected override void FillSqlDataRecord(global::Microsoft.Data.SqlClient.Server.SqlDataRecord record, BulkTokenSearchParamTableTypeV1Row rowData)
        {
            Offset.Set(record, 0, rowData.Offset);
            SearchParamId.Set(record, 1, rowData.SearchParamId);
            SystemId.Set(record, 2, rowData.SystemId);
            Code.Set(record, 3, rowData.Code);
        }
    }

    internal struct BulkTokenSearchParamTableTypeV1Row
    {
        internal BulkTokenSearchParamTableTypeV1Row(System.Int32 Offset, System.Int16 SearchParamId, System.Nullable<System.Int32> SystemId, System.String Code)
        {
            this.Offset = Offset;
            this.SearchParamId = SearchParamId;
            this.SystemId = SystemId;
            this.Code = Code;
        }

        internal System.Int32 Offset { get; }
        internal System.Int16 SearchParamId { get; }
        internal System.Nullable<System.Int32> SystemId { get; }
        internal System.String Code { get; }
    }

    internal class BulkTokenSearchParamTableTypeV2TableValuedParameterDefinition : TableValuedParameterDefinition<BulkTokenSearchParamTableTypeV2Row>
    {
        internal BulkTokenSearchParamTableTypeV2TableValuedParameterDefinition(System.String parameterName) : base(parameterName, "dbo.BulkTokenSearchParamTableType_2")
        {
        }

        internal readonly IntColumn Offset = new IntColumn("Offset");
        internal readonly SmallIntColumn SearchParamId = new SmallIntColumn("SearchParamId");
        internal readonly NullableIntColumn SystemId = new NullableIntColumn("SystemId");
        internal readonly VarCharColumn Code = new VarCharColumn("Code", 256, "Latin1_General_100_CS_AS");
        internal readonly NullableVarCharColumn CodeOverflow = new NullableVarCharColumn("CodeOverflow", -1, "Latin1_General_100_CS_AS");

        protected override global::System.Collections.Generic.IEnumerable<Column> Columns => new Column[] { Offset, SearchParamId, SystemId, Code, CodeOverflow };

        protected override void FillSqlDataRecord(global::Microsoft.Data.SqlClient.Server.SqlDataRecord record, BulkTokenSearchParamTableTypeV2Row rowData)
        {
            Offset.Set(record, 0, rowData.Offset);
            SearchParamId.Set(record, 1, rowData.SearchParamId);
            SystemId.Set(record, 2, rowData.SystemId);
            Code.Set(record, 3, rowData.Code);
            CodeOverflow.Set(record, 4, rowData.CodeOverflow);
        }
    }

    internal struct BulkTokenSearchParamTableTypeV2Row
    {
        internal BulkTokenSearchParamTableTypeV2Row(System.Int32 Offset, System.Int16 SearchParamId, System.Nullable<System.Int32> SystemId, System.String Code, System.String CodeOverflow)
        {
            this.Offset = Offset;
            this.SearchParamId = SearchParamId;
            this.SystemId = SystemId;
            this.Code = Code;
            this.CodeOverflow = CodeOverflow;
        }

        internal System.Int32 Offset { get; }
        internal System.Int16 SearchParamId { get; }
        internal System.Nullable<System.Int32> SystemId { get; }
        internal System.String Code { get; }
        internal System.String CodeOverflow { get; }
    }

    internal class BulkTokenStringCompositeSearchParamTableTypeV1TableValuedParameterDefinition : TableValuedParameterDefinition<BulkTokenStringCompositeSearchParamTableTypeV1Row>
    {
        internal BulkTokenStringCompositeSearchParamTableTypeV1TableValuedParameterDefinition(System.String parameterName) : base(parameterName, "dbo.BulkTokenStringCompositeSearchParamTableType_1")
        {
        }

        internal readonly IntColumn Offset = new IntColumn("Offset");
        internal readonly SmallIntColumn SearchParamId = new SmallIntColumn("SearchParamId");
        internal readonly NullableIntColumn SystemId1 = new NullableIntColumn("SystemId1");
        internal readonly VarCharColumn Code1 = new VarCharColumn("Code1", 128, "Latin1_General_100_CS_AS");
        internal readonly NVarCharColumn Text2 = new NVarCharColumn("Text2", 256, "Latin1_General_100_CI_AI_SC");
        internal readonly NullableNVarCharColumn TextOverflow2 = new NullableNVarCharColumn("TextOverflow2", -1, "Latin1_General_100_CI_AI_SC");

        protected override global::System.Collections.Generic.IEnumerable<Column> Columns => new Column[] { Offset, SearchParamId, SystemId1, Code1, Text2, TextOverflow2 };

        protected override void FillSqlDataRecord(global::Microsoft.Data.SqlClient.Server.SqlDataRecord record, BulkTokenStringCompositeSearchParamTableTypeV1Row rowData)
        {
            Offset.Set(record, 0, rowData.Offset);
            SearchParamId.Set(record, 1, rowData.SearchParamId);
            SystemId1.Set(record, 2, rowData.SystemId1);
            Code1.Set(record, 3, rowData.Code1);
            Text2.Set(record, 4, rowData.Text2);
            TextOverflow2.Set(record, 5, rowData.TextOverflow2);
        }
    }

    internal struct BulkTokenStringCompositeSearchParamTableTypeV1Row
    {
        internal BulkTokenStringCompositeSearchParamTableTypeV1Row(System.Int32 Offset, System.Int16 SearchParamId, System.Nullable<System.Int32> SystemId1, System.String Code1, System.String Text2, System.String TextOverflow2)
        {
            this.Offset = Offset;
            this.SearchParamId = SearchParamId;
            this.SystemId1 = SystemId1;
            this.Code1 = Code1;
            this.Text2 = Text2;
            this.TextOverflow2 = TextOverflow2;
        }

        internal System.Int32 Offset { get; }
        internal System.Int16 SearchParamId { get; }
        internal System.Nullable<System.Int32> SystemId1 { get; }
        internal System.String Code1 { get; }
        internal System.String Text2 { get; }
        internal System.String TextOverflow2 { get; }
    }

    internal class BulkTokenStringCompositeSearchParamTableTypeV2TableValuedParameterDefinition : TableValuedParameterDefinition<BulkTokenStringCompositeSearchParamTableTypeV2Row>
    {
        internal BulkTokenStringCompositeSearchParamTableTypeV2TableValuedParameterDefinition(System.String parameterName) : base(parameterName, "dbo.BulkTokenStringCompositeSearchParamTableType_2")
        {
        }

        internal readonly IntColumn Offset = new IntColumn("Offset");
        internal readonly SmallIntColumn SearchParamId = new SmallIntColumn("SearchParamId");
        internal readonly NullableIntColumn SystemId1 = new NullableIntColumn("SystemId1");
        internal readonly VarCharColumn Code1 = new VarCharColumn("Code1", 256, "Latin1_General_100_CS_AS");
        internal readonly NullableVarCharColumn CodeOverflow1 = new NullableVarCharColumn("CodeOverflow1", -1, "Latin1_General_100_CS_AS");
        internal readonly NVarCharColumn Text2 = new NVarCharColumn("Text2", 256, "Latin1_General_100_CI_AI_SC");
        internal readonly NullableNVarCharColumn TextOverflow2 = new NullableNVarCharColumn("TextOverflow2", -1, "Latin1_General_100_CI_AI_SC");

        protected override global::System.Collections.Generic.IEnumerable<Column> Columns => new Column[] { Offset, SearchParamId, SystemId1, Code1, CodeOverflow1, Text2, TextOverflow2 };

        protected override void FillSqlDataRecord(global::Microsoft.Data.SqlClient.Server.SqlDataRecord record, BulkTokenStringCompositeSearchParamTableTypeV2Row rowData)
        {
            Offset.Set(record, 0, rowData.Offset);
            SearchParamId.Set(record, 1, rowData.SearchParamId);
            SystemId1.Set(record, 2, rowData.SystemId1);
            Code1.Set(record, 3, rowData.Code1);
            CodeOverflow1.Set(record, 4, rowData.CodeOverflow1);
            Text2.Set(record, 5, rowData.Text2);
            TextOverflow2.Set(record, 6, rowData.TextOverflow2);
        }
    }

    internal struct BulkTokenStringCompositeSearchParamTableTypeV2Row
    {
        internal BulkTokenStringCompositeSearchParamTableTypeV2Row(System.Int32 Offset, System.Int16 SearchParamId, System.Nullable<System.Int32> SystemId1, System.String Code1, System.String CodeOverflow1, System.String Text2, System.String TextOverflow2)
        {
            this.Offset = Offset;
            this.SearchParamId = SearchParamId;
            this.SystemId1 = SystemId1;
            this.Code1 = Code1;
            this.CodeOverflow1 = CodeOverflow1;
            this.Text2 = Text2;
            this.TextOverflow2 = TextOverflow2;
        }

        internal System.Int32 Offset { get; }
        internal System.Int16 SearchParamId { get; }
        internal System.Nullable<System.Int32> SystemId1 { get; }
        internal System.String Code1 { get; }
        internal System.String CodeOverflow1 { get; }
        internal System.String Text2 { get; }
        internal System.String TextOverflow2 { get; }
    }

    internal class BulkTokenTextTableTypeV1TableValuedParameterDefinition : TableValuedParameterDefinition<BulkTokenTextTableTypeV1Row>
    {
        internal BulkTokenTextTableTypeV1TableValuedParameterDefinition(System.String parameterName) : base(parameterName, "dbo.BulkTokenTextTableType_1")
        {
        }

        internal readonly IntColumn Offset = new IntColumn("Offset");
        internal readonly SmallIntColumn SearchParamId = new SmallIntColumn("SearchParamId");
        internal readonly NVarCharColumn Text = new NVarCharColumn("Text", 400, "Latin1_General_CI_AI");

        protected override global::System.Collections.Generic.IEnumerable<Column> Columns => new Column[] { Offset, SearchParamId, Text };

        protected override void FillSqlDataRecord(global::Microsoft.Data.SqlClient.Server.SqlDataRecord record, BulkTokenTextTableTypeV1Row rowData)
        {
            Offset.Set(record, 0, rowData.Offset);
            SearchParamId.Set(record, 1, rowData.SearchParamId);
            Text.Set(record, 2, rowData.Text);
        }
    }

    internal struct BulkTokenTextTableTypeV1Row
    {
        internal BulkTokenTextTableTypeV1Row(System.Int32 Offset, System.Int16 SearchParamId, System.String Text)
        {
            this.Offset = Offset;
            this.SearchParamId = SearchParamId;
            this.Text = Text;
        }

        internal System.Int32 Offset { get; }
        internal System.Int16 SearchParamId { get; }
        internal System.String Text { get; }
    }

    internal class BulkTokenTokenCompositeSearchParamTableTypeV1TableValuedParameterDefinition : TableValuedParameterDefinition<BulkTokenTokenCompositeSearchParamTableTypeV1Row>
    {
        internal BulkTokenTokenCompositeSearchParamTableTypeV1TableValuedParameterDefinition(System.String parameterName) : base(parameterName, "dbo.BulkTokenTokenCompositeSearchParamTableType_1")
        {
        }

        internal readonly IntColumn Offset = new IntColumn("Offset");
        internal readonly SmallIntColumn SearchParamId = new SmallIntColumn("SearchParamId");
        internal readonly NullableIntColumn SystemId1 = new NullableIntColumn("SystemId1");
        internal readonly VarCharColumn Code1 = new VarCharColumn("Code1", 128, "Latin1_General_100_CS_AS");
        internal readonly NullableIntColumn SystemId2 = new NullableIntColumn("SystemId2");
        internal readonly VarCharColumn Code2 = new VarCharColumn("Code2", 128, "Latin1_General_100_CS_AS");

        protected override global::System.Collections.Generic.IEnumerable<Column> Columns => new Column[] { Offset, SearchParamId, SystemId1, Code1, SystemId2, Code2 };

        protected override void FillSqlDataRecord(global::Microsoft.Data.SqlClient.Server.SqlDataRecord record, BulkTokenTokenCompositeSearchParamTableTypeV1Row rowData)
        {
            Offset.Set(record, 0, rowData.Offset);
            SearchParamId.Set(record, 1, rowData.SearchParamId);
            SystemId1.Set(record, 2, rowData.SystemId1);
            Code1.Set(record, 3, rowData.Code1);
            SystemId2.Set(record, 4, rowData.SystemId2);
            Code2.Set(record, 5, rowData.Code2);
        }
    }

    internal struct BulkTokenTokenCompositeSearchParamTableTypeV1Row
    {
        internal BulkTokenTokenCompositeSearchParamTableTypeV1Row(System.Int32 Offset, System.Int16 SearchParamId, System.Nullable<System.Int32> SystemId1, System.String Code1, System.Nullable<System.Int32> SystemId2, System.String Code2)
        {
            this.Offset = Offset;
            this.SearchParamId = SearchParamId;
            this.SystemId1 = SystemId1;
            this.Code1 = Code1;
            this.SystemId2 = SystemId2;
            this.Code2 = Code2;
        }

        internal System.Int32 Offset { get; }
        internal System.Int16 SearchParamId { get; }
        internal System.Nullable<System.Int32> SystemId1 { get; }
        internal System.String Code1 { get; }
        internal System.Nullable<System.Int32> SystemId2 { get; }
        internal System.String Code2 { get; }
    }

    internal class BulkTokenTokenCompositeSearchParamTableTypeV2TableValuedParameterDefinition : TableValuedParameterDefinition<BulkTokenTokenCompositeSearchParamTableTypeV2Row>
    {
        internal BulkTokenTokenCompositeSearchParamTableTypeV2TableValuedParameterDefinition(System.String parameterName) : base(parameterName, "dbo.BulkTokenTokenCompositeSearchParamTableType_2")
        {
        }

        internal readonly IntColumn Offset = new IntColumn("Offset");
        internal readonly SmallIntColumn SearchParamId = new SmallIntColumn("SearchParamId");
        internal readonly NullableIntColumn SystemId1 = new NullableIntColumn("SystemId1");
        internal readonly VarCharColumn Code1 = new VarCharColumn("Code1", 256, "Latin1_General_100_CS_AS");
        internal readonly NullableVarCharColumn CodeOverflow1 = new NullableVarCharColumn("CodeOverflow1", -1, "Latin1_General_100_CS_AS");
        internal readonly NullableIntColumn SystemId2 = new NullableIntColumn("SystemId2");
        internal readonly VarCharColumn Code2 = new VarCharColumn("Code2", 256, "Latin1_General_100_CS_AS");
        internal readonly NullableVarCharColumn CodeOverflow2 = new NullableVarCharColumn("CodeOverflow2", -1, "Latin1_General_100_CS_AS");

        protected override global::System.Collections.Generic.IEnumerable<Column> Columns => new Column[] { Offset, SearchParamId, SystemId1, Code1, CodeOverflow1, SystemId2, Code2, CodeOverflow2 };

        protected override void FillSqlDataRecord(global::Microsoft.Data.SqlClient.Server.SqlDataRecord record, BulkTokenTokenCompositeSearchParamTableTypeV2Row rowData)
        {
            Offset.Set(record, 0, rowData.Offset);
            SearchParamId.Set(record, 1, rowData.SearchParamId);
            SystemId1.Set(record, 2, rowData.SystemId1);
            Code1.Set(record, 3, rowData.Code1);
            CodeOverflow1.Set(record, 4, rowData.CodeOverflow1);
            SystemId2.Set(record, 5, rowData.SystemId2);
            Code2.Set(record, 6, rowData.Code2);
            CodeOverflow2.Set(record, 7, rowData.CodeOverflow2);
        }
    }

    internal struct BulkTokenTokenCompositeSearchParamTableTypeV2Row
    {
        internal BulkTokenTokenCompositeSearchParamTableTypeV2Row(System.Int32 Offset, System.Int16 SearchParamId, System.Nullable<System.Int32> SystemId1, System.String Code1, System.String CodeOverflow1, System.Nullable<System.Int32> SystemId2, System.String Code2, System.String CodeOverflow2)
        {
            this.Offset = Offset;
            this.SearchParamId = SearchParamId;
            this.SystemId1 = SystemId1;
            this.Code1 = Code1;
            this.CodeOverflow1 = CodeOverflow1;
            this.SystemId2 = SystemId2;
            this.Code2 = Code2;
            this.CodeOverflow2 = CodeOverflow2;
        }

        internal System.Int32 Offset { get; }
        internal System.Int16 SearchParamId { get; }
        internal System.Nullable<System.Int32> SystemId1 { get; }
        internal System.String Code1 { get; }
        internal System.String CodeOverflow1 { get; }
        internal System.Nullable<System.Int32> SystemId2 { get; }
        internal System.String Code2 { get; }
        internal System.String CodeOverflow2 { get; }
    }

    internal class BulkUriSearchParamTableTypeV1TableValuedParameterDefinition : TableValuedParameterDefinition<BulkUriSearchParamTableTypeV1Row>
    {
        internal BulkUriSearchParamTableTypeV1TableValuedParameterDefinition(System.String parameterName) : base(parameterName, "dbo.BulkUriSearchParamTableType_1")
        {
        }

        internal readonly IntColumn Offset = new IntColumn("Offset");
        internal readonly SmallIntColumn SearchParamId = new SmallIntColumn("SearchParamId");
        internal readonly VarCharColumn Uri = new VarCharColumn("Uri", 256, "Latin1_General_100_CS_AS");

        protected override global::System.Collections.Generic.IEnumerable<Column> Columns => new Column[] { Offset, SearchParamId, Uri };

        protected override void FillSqlDataRecord(global::Microsoft.Data.SqlClient.Server.SqlDataRecord record, BulkUriSearchParamTableTypeV1Row rowData)
        {
            Offset.Set(record, 0, rowData.Offset);
            SearchParamId.Set(record, 1, rowData.SearchParamId);
            Uri.Set(record, 2, rowData.Uri);
        }
    }

    internal struct BulkUriSearchParamTableTypeV1Row
    {
        internal BulkUriSearchParamTableTypeV1Row(System.Int32 Offset, System.Int16 SearchParamId, System.String Uri)
        {
            this.Offset = Offset;
            this.SearchParamId = SearchParamId;
            this.Uri = Uri;
        }

        internal System.Int32 Offset { get; }
        internal System.Int16 SearchParamId { get; }
        internal System.String Uri { get; }
    }

    internal class CompartmentAssignmentListTableValuedParameterDefinition : TableValuedParameterDefinition<CompartmentAssignmentListRow>
    {
        internal CompartmentAssignmentListTableValuedParameterDefinition(System.String parameterName) : base(parameterName, "dbo.CompartmentAssignmentList")
        {
        }

        internal readonly SmallIntColumn ResourceTypeId = new SmallIntColumn("ResourceTypeId");
        internal readonly BigIntColumn ResourceSurrogateId = new BigIntColumn("ResourceSurrogateId");
        internal readonly TinyIntColumn CompartmentTypeId = new TinyIntColumn("CompartmentTypeId");
        internal readonly VarCharColumn ReferenceResourceId = new VarCharColumn("ReferenceResourceId", 64, "Latin1_General_100_CS_AS");

        protected override global::System.Collections.Generic.IEnumerable<Column> Columns => new Column[] { ResourceTypeId, ResourceSurrogateId, CompartmentTypeId, ReferenceResourceId };

        protected override void FillSqlDataRecord(global::Microsoft.Data.SqlClient.Server.SqlDataRecord record, CompartmentAssignmentListRow rowData)
        {
            ResourceTypeId.Set(record, 0, rowData.ResourceTypeId);
            ResourceSurrogateId.Set(record, 1, rowData.ResourceSurrogateId);
            CompartmentTypeId.Set(record, 2, rowData.CompartmentTypeId);
            ReferenceResourceId.Set(record, 3, rowData.ReferenceResourceId);
        }
    }

    internal struct CompartmentAssignmentListRow
    {
        internal CompartmentAssignmentListRow(System.Int16 ResourceTypeId, System.Int64 ResourceSurrogateId, System.Byte CompartmentTypeId, System.String ReferenceResourceId)
        {
            this.ResourceTypeId = ResourceTypeId;
            this.ResourceSurrogateId = ResourceSurrogateId;
            this.CompartmentTypeId = CompartmentTypeId;
            this.ReferenceResourceId = ReferenceResourceId;
        }

        internal System.Int16 ResourceTypeId { get; }
        internal System.Int64 ResourceSurrogateId { get; }
        internal System.Byte CompartmentTypeId { get; }
        internal System.String ReferenceResourceId { get; }
    }

    internal class DateTimeSearchParamListTableValuedParameterDefinition : TableValuedParameterDefinition<DateTimeSearchParamListRow>
    {
        internal DateTimeSearchParamListTableValuedParameterDefinition(System.String parameterName) : base(parameterName, "dbo.DateTimeSearchParamList")
        {
        }

        internal readonly SmallIntColumn ResourceTypeId = new SmallIntColumn("ResourceTypeId");
        internal readonly BigIntColumn ResourceSurrogateId = new BigIntColumn("ResourceSurrogateId");
        internal readonly SmallIntColumn SearchParamId = new SmallIntColumn("SearchParamId");
        internal readonly DateTimeOffsetColumn StartDateTime = new DateTimeOffsetColumn("StartDateTime", 7);
        internal readonly DateTimeOffsetColumn EndDateTime = new DateTimeOffsetColumn("EndDateTime", 7);
        internal readonly BitColumn IsLongerThanADay = new BitColumn("IsLongerThanADay");
        internal readonly BitColumn IsMin = new BitColumn("IsMin");
        internal readonly BitColumn IsMax = new BitColumn("IsMax");

        protected override global::System.Collections.Generic.IEnumerable<Column> Columns => new Column[] { ResourceTypeId, ResourceSurrogateId, SearchParamId, StartDateTime, EndDateTime, IsLongerThanADay, IsMin, IsMax };

        protected override void FillSqlDataRecord(global::Microsoft.Data.SqlClient.Server.SqlDataRecord record, DateTimeSearchParamListRow rowData)
        {
            ResourceTypeId.Set(record, 0, rowData.ResourceTypeId);
            ResourceSurrogateId.Set(record, 1, rowData.ResourceSurrogateId);
            SearchParamId.Set(record, 2, rowData.SearchParamId);
            StartDateTime.Set(record, 3, rowData.StartDateTime);
            EndDateTime.Set(record, 4, rowData.EndDateTime);
            IsLongerThanADay.Set(record, 5, rowData.IsLongerThanADay);
            IsMin.Set(record, 6, rowData.IsMin);
            IsMax.Set(record, 7, rowData.IsMax);
        }
    }

    internal struct DateTimeSearchParamListRow
    {
        internal DateTimeSearchParamListRow(System.Int16 ResourceTypeId, System.Int64 ResourceSurrogateId, System.Int16 SearchParamId, System.DateTimeOffset StartDateTime, System.DateTimeOffset EndDateTime, System.Boolean IsLongerThanADay, System.Boolean IsMin, System.Boolean IsMax)
        {
            this.ResourceTypeId = ResourceTypeId;
            this.ResourceSurrogateId = ResourceSurrogateId;
            this.SearchParamId = SearchParamId;
            this.StartDateTime = StartDateTime;
            this.EndDateTime = EndDateTime;
            this.IsLongerThanADay = IsLongerThanADay;
            this.IsMin = IsMin;
            this.IsMax = IsMax;
        }

        internal System.Int16 ResourceTypeId { get; }
        internal System.Int64 ResourceSurrogateId { get; }
        internal System.Int16 SearchParamId { get; }
        internal System.DateTimeOffset StartDateTime { get; }
        internal System.DateTimeOffset EndDateTime { get; }
        internal System.Boolean IsLongerThanADay { get; }
        internal System.Boolean IsMin { get; }
        internal System.Boolean IsMax { get; }
    }

    internal class NumberSearchParamListTableValuedParameterDefinition : TableValuedParameterDefinition<NumberSearchParamListRow>
    {
        internal NumberSearchParamListTableValuedParameterDefinition(System.String parameterName) : base(parameterName, "dbo.NumberSearchParamList")
        {
        }

        internal readonly SmallIntColumn ResourceTypeId = new SmallIntColumn("ResourceTypeId");
        internal readonly BigIntColumn ResourceSurrogateId = new BigIntColumn("ResourceSurrogateId");
        internal readonly SmallIntColumn SearchParamId = new SmallIntColumn("SearchParamId");
        internal readonly NullableDecimalColumn SingleValue = new NullableDecimalColumn("SingleValue", 36, 18);
        internal readonly NullableDecimalColumn LowValue = new NullableDecimalColumn("LowValue", 36, 18);
        internal readonly NullableDecimalColumn HighValue = new NullableDecimalColumn("HighValue", 36, 18);

        protected override global::System.Collections.Generic.IEnumerable<Column> Columns => new Column[] { ResourceTypeId, ResourceSurrogateId, SearchParamId, SingleValue, LowValue, HighValue };

        protected override void FillSqlDataRecord(global::Microsoft.Data.SqlClient.Server.SqlDataRecord record, NumberSearchParamListRow rowData)
        {
            ResourceTypeId.Set(record, 0, rowData.ResourceTypeId);
            ResourceSurrogateId.Set(record, 1, rowData.ResourceSurrogateId);
            SearchParamId.Set(record, 2, rowData.SearchParamId);
            SingleValue.Set(record, 3, rowData.SingleValue);
            LowValue.Set(record, 4, rowData.LowValue);
            HighValue.Set(record, 5, rowData.HighValue);
        }
    }

    internal struct NumberSearchParamListRow
    {
        internal NumberSearchParamListRow(System.Int16 ResourceTypeId, System.Int64 ResourceSurrogateId, System.Int16 SearchParamId, System.Nullable<System.Decimal> SingleValue, System.Nullable<System.Decimal> LowValue, System.Nullable<System.Decimal> HighValue)
        {
            this.ResourceTypeId = ResourceTypeId;
            this.ResourceSurrogateId = ResourceSurrogateId;
            this.SearchParamId = SearchParamId;
            this.SingleValue = SingleValue;
            this.LowValue = LowValue;
            this.HighValue = HighValue;
        }

        internal System.Int16 ResourceTypeId { get; }
        internal System.Int64 ResourceSurrogateId { get; }
        internal System.Int16 SearchParamId { get; }
        internal System.Nullable<System.Decimal> SingleValue { get; }
        internal System.Nullable<System.Decimal> LowValue { get; }
        internal System.Nullable<System.Decimal> HighValue { get; }
    }

    internal class QuantitySearchParamListTableValuedParameterDefinition : TableValuedParameterDefinition<QuantitySearchParamListRow>
    {
        internal QuantitySearchParamListTableValuedParameterDefinition(System.String parameterName) : base(parameterName, "dbo.QuantitySearchParamList")
        {
        }

        internal readonly SmallIntColumn ResourceTypeId = new SmallIntColumn("ResourceTypeId");
        internal readonly BigIntColumn ResourceSurrogateId = new BigIntColumn("ResourceSurrogateId");
        internal readonly SmallIntColumn SearchParamId = new SmallIntColumn("SearchParamId");
        internal readonly NullableIntColumn SystemId = new NullableIntColumn("SystemId");
        internal readonly NullableIntColumn QuantityCodeId = new NullableIntColumn("QuantityCodeId");
        internal readonly NullableDecimalColumn SingleValue = new NullableDecimalColumn("SingleValue", 36, 18);
        internal readonly NullableDecimalColumn LowValue = new NullableDecimalColumn("LowValue", 36, 18);
        internal readonly NullableDecimalColumn HighValue = new NullableDecimalColumn("HighValue", 36, 18);

        protected override global::System.Collections.Generic.IEnumerable<Column> Columns => new Column[] { ResourceTypeId, ResourceSurrogateId, SearchParamId, SystemId, QuantityCodeId, SingleValue, LowValue, HighValue };

        protected override void FillSqlDataRecord(global::Microsoft.Data.SqlClient.Server.SqlDataRecord record, QuantitySearchParamListRow rowData)
        {
            ResourceTypeId.Set(record, 0, rowData.ResourceTypeId);
            ResourceSurrogateId.Set(record, 1, rowData.ResourceSurrogateId);
            SearchParamId.Set(record, 2, rowData.SearchParamId);
            SystemId.Set(record, 3, rowData.SystemId);
            QuantityCodeId.Set(record, 4, rowData.QuantityCodeId);
            SingleValue.Set(record, 5, rowData.SingleValue);
            LowValue.Set(record, 6, rowData.LowValue);
            HighValue.Set(record, 7, rowData.HighValue);
        }
    }

    internal struct QuantitySearchParamListRow
    {
        internal QuantitySearchParamListRow(System.Int16 ResourceTypeId, System.Int64 ResourceSurrogateId, System.Int16 SearchParamId, System.Nullable<System.Int32> SystemId, System.Nullable<System.Int32> QuantityCodeId, System.Nullable<System.Decimal> SingleValue, System.Nullable<System.Decimal> LowValue, System.Nullable<System.Decimal> HighValue)
        {
            this.ResourceTypeId = ResourceTypeId;
            this.ResourceSurrogateId = ResourceSurrogateId;
            this.SearchParamId = SearchParamId;
            this.SystemId = SystemId;
            this.QuantityCodeId = QuantityCodeId;
            this.SingleValue = SingleValue;
            this.LowValue = LowValue;
            this.HighValue = HighValue;
        }

        internal System.Int16 ResourceTypeId { get; }
        internal System.Int64 ResourceSurrogateId { get; }
        internal System.Int16 SearchParamId { get; }
        internal System.Nullable<System.Int32> SystemId { get; }
        internal System.Nullable<System.Int32> QuantityCodeId { get; }
        internal System.Nullable<System.Decimal> SingleValue { get; }
        internal System.Nullable<System.Decimal> LowValue { get; }
        internal System.Nullable<System.Decimal> HighValue { get; }
    }

    internal class ReferenceSearchParamListTableValuedParameterDefinition : TableValuedParameterDefinition<ReferenceSearchParamListRow>
    {
        internal ReferenceSearchParamListTableValuedParameterDefinition(System.String parameterName) : base(parameterName, "dbo.ReferenceSearchParamList")
        {
        }

        internal readonly SmallIntColumn ResourceTypeId = new SmallIntColumn("ResourceTypeId");
        internal readonly BigIntColumn ResourceSurrogateId = new BigIntColumn("ResourceSurrogateId");
        internal readonly SmallIntColumn SearchParamId = new SmallIntColumn("SearchParamId");
        internal readonly NullableVarCharColumn BaseUri = new NullableVarCharColumn("BaseUri", 128, "Latin1_General_100_CS_AS");
        internal readonly NullableSmallIntColumn ReferenceResourceTypeId = new NullableSmallIntColumn("ReferenceResourceTypeId");
        internal readonly VarCharColumn ReferenceResourceId = new VarCharColumn("ReferenceResourceId", 64, "Latin1_General_100_CS_AS");
        internal readonly NullableIntColumn ReferenceResourceVersion = new NullableIntColumn("ReferenceResourceVersion");

        protected override global::System.Collections.Generic.IEnumerable<Column> Columns => new Column[] { ResourceTypeId, ResourceSurrogateId, SearchParamId, BaseUri, ReferenceResourceTypeId, ReferenceResourceId, ReferenceResourceVersion };

        protected override void FillSqlDataRecord(global::Microsoft.Data.SqlClient.Server.SqlDataRecord record, ReferenceSearchParamListRow rowData)
        {
            ResourceTypeId.Set(record, 0, rowData.ResourceTypeId);
            ResourceSurrogateId.Set(record, 1, rowData.ResourceSurrogateId);
            SearchParamId.Set(record, 2, rowData.SearchParamId);
            BaseUri.Set(record, 3, rowData.BaseUri);
            ReferenceResourceTypeId.Set(record, 4, rowData.ReferenceResourceTypeId);
            ReferenceResourceId.Set(record, 5, rowData.ReferenceResourceId);
            ReferenceResourceVersion.Set(record, 6, rowData.ReferenceResourceVersion);
        }
    }

    internal struct ReferenceSearchParamListRow
    {
        internal ReferenceSearchParamListRow(System.Int16 ResourceTypeId, System.Int64 ResourceSurrogateId, System.Int16 SearchParamId, System.String BaseUri, System.Nullable<System.Int16> ReferenceResourceTypeId, System.String ReferenceResourceId, System.Nullable<System.Int32> ReferenceResourceVersion)
        {
            this.ResourceTypeId = ResourceTypeId;
            this.ResourceSurrogateId = ResourceSurrogateId;
            this.SearchParamId = SearchParamId;
            this.BaseUri = BaseUri;
            this.ReferenceResourceTypeId = ReferenceResourceTypeId;
            this.ReferenceResourceId = ReferenceResourceId;
            this.ReferenceResourceVersion = ReferenceResourceVersion;
        }

        internal System.Int16 ResourceTypeId { get; }
        internal System.Int64 ResourceSurrogateId { get; }
        internal System.Int16 SearchParamId { get; }
        internal System.String BaseUri { get; }
        internal System.Nullable<System.Int16> ReferenceResourceTypeId { get; }
        internal System.String ReferenceResourceId { get; }
        internal System.Nullable<System.Int32> ReferenceResourceVersion { get; }
    }

    internal class ReferenceTokenCompositeSearchParamListTableValuedParameterDefinition : TableValuedParameterDefinition<ReferenceTokenCompositeSearchParamListRow>
    {
        internal ReferenceTokenCompositeSearchParamListTableValuedParameterDefinition(System.String parameterName) : base(parameterName, "dbo.ReferenceTokenCompositeSearchParamList")
        {
        }

        internal readonly SmallIntColumn ResourceTypeId = new SmallIntColumn("ResourceTypeId");
        internal readonly BigIntColumn ResourceSurrogateId = new BigIntColumn("ResourceSurrogateId");
        internal readonly SmallIntColumn SearchParamId = new SmallIntColumn("SearchParamId");
        internal readonly NullableVarCharColumn BaseUri1 = new NullableVarCharColumn("BaseUri1", 128, "Latin1_General_100_CS_AS");
        internal readonly NullableSmallIntColumn ReferenceResourceTypeId1 = new NullableSmallIntColumn("ReferenceResourceTypeId1");
        internal readonly VarCharColumn ReferenceResourceId1 = new VarCharColumn("ReferenceResourceId1", 64, "Latin1_General_100_CS_AS");
        internal readonly NullableIntColumn ReferenceResourceVersion1 = new NullableIntColumn("ReferenceResourceVersion1");
        internal readonly NullableIntColumn SystemId2 = new NullableIntColumn("SystemId2");
        internal readonly VarCharColumn Code2 = new VarCharColumn("Code2", 256, "Latin1_General_100_CS_AS");
        internal readonly NullableVarCharColumn CodeOverflow2 = new NullableVarCharColumn("CodeOverflow2", -1, "Latin1_General_100_CS_AS");

        protected override global::System.Collections.Generic.IEnumerable<Column> Columns => new Column[] { ResourceTypeId, ResourceSurrogateId, SearchParamId, BaseUri1, ReferenceResourceTypeId1, ReferenceResourceId1, ReferenceResourceVersion1, SystemId2, Code2, CodeOverflow2 };

        protected override void FillSqlDataRecord(global::Microsoft.Data.SqlClient.Server.SqlDataRecord record, ReferenceTokenCompositeSearchParamListRow rowData)
        {
            ResourceTypeId.Set(record, 0, rowData.ResourceTypeId);
            ResourceSurrogateId.Set(record, 1, rowData.ResourceSurrogateId);
            SearchParamId.Set(record, 2, rowData.SearchParamId);
            BaseUri1.Set(record, 3, rowData.BaseUri1);
            ReferenceResourceTypeId1.Set(record, 4, rowData.ReferenceResourceTypeId1);
            ReferenceResourceId1.Set(record, 5, rowData.ReferenceResourceId1);
            ReferenceResourceVersion1.Set(record, 6, rowData.ReferenceResourceVersion1);
            SystemId2.Set(record, 7, rowData.SystemId2);
            Code2.Set(record, 8, rowData.Code2);
            CodeOverflow2.Set(record, 9, rowData.CodeOverflow2);
        }
    }

    internal struct ReferenceTokenCompositeSearchParamListRow
    {
        internal ReferenceTokenCompositeSearchParamListRow(System.Int16 ResourceTypeId, System.Int64 ResourceSurrogateId, System.Int16 SearchParamId, System.String BaseUri1, System.Nullable<System.Int16> ReferenceResourceTypeId1, System.String ReferenceResourceId1, System.Nullable<System.Int32> ReferenceResourceVersion1, System.Nullable<System.Int32> SystemId2, System.String Code2, System.String CodeOverflow2)
        {
            this.ResourceTypeId = ResourceTypeId;
            this.ResourceSurrogateId = ResourceSurrogateId;
            this.SearchParamId = SearchParamId;
            this.BaseUri1 = BaseUri1;
            this.ReferenceResourceTypeId1 = ReferenceResourceTypeId1;
            this.ReferenceResourceId1 = ReferenceResourceId1;
            this.ReferenceResourceVersion1 = ReferenceResourceVersion1;
            this.SystemId2 = SystemId2;
            this.Code2 = Code2;
            this.CodeOverflow2 = CodeOverflow2;
        }

        internal System.Int16 ResourceTypeId { get; }
        internal System.Int64 ResourceSurrogateId { get; }
        internal System.Int16 SearchParamId { get; }
        internal System.String BaseUri1 { get; }
        internal System.Nullable<System.Int16> ReferenceResourceTypeId1 { get; }
        internal System.String ReferenceResourceId1 { get; }
        internal System.Nullable<System.Int32> ReferenceResourceVersion1 { get; }
        internal System.Nullable<System.Int32> SystemId2 { get; }
        internal System.String Code2 { get; }
        internal System.String CodeOverflow2 { get; }
    }

    internal class ResourceDateKeyListTableValuedParameterDefinition : TableValuedParameterDefinition<ResourceDateKeyListRow>
    {
        internal ResourceDateKeyListTableValuedParameterDefinition(System.String parameterName) : base(parameterName, "dbo.ResourceDateKeyList")
        {
        }

        internal readonly SmallIntColumn ResourceTypeId = new SmallIntColumn("ResourceTypeId");
        internal readonly VarCharColumn ResourceId = new VarCharColumn("ResourceId", 64, "Latin1_General_100_CS_AS");
        internal readonly BigIntColumn ResourceSurrogateId = new BigIntColumn("ResourceSurrogateId");

        protected override global::System.Collections.Generic.IEnumerable<Column> Columns => new Column[] { ResourceTypeId, ResourceId, ResourceSurrogateId };

        protected override void FillSqlDataRecord(global::Microsoft.Data.SqlClient.Server.SqlDataRecord record, ResourceDateKeyListRow rowData)
        {
            ResourceTypeId.Set(record, 0, rowData.ResourceTypeId);
            ResourceId.Set(record, 1, rowData.ResourceId);
            ResourceSurrogateId.Set(record, 2, rowData.ResourceSurrogateId);
        }
    }

    internal struct ResourceDateKeyListRow
    {
        internal ResourceDateKeyListRow(System.Int16 ResourceTypeId, System.String ResourceId, System.Int64 ResourceSurrogateId)
        {
            this.ResourceTypeId = ResourceTypeId;
            this.ResourceId = ResourceId;
            this.ResourceSurrogateId = ResourceSurrogateId;
        }

        internal System.Int16 ResourceTypeId { get; }
        internal System.String ResourceId { get; }
        internal System.Int64 ResourceSurrogateId { get; }
    }

    internal class ResourceKeyListTableValuedParameterDefinition : TableValuedParameterDefinition<ResourceKeyListRow>
    {
        internal ResourceKeyListTableValuedParameterDefinition(System.String parameterName) : base(parameterName, "dbo.ResourceKeyList")
        {
        }

        internal readonly SmallIntColumn ResourceTypeId = new SmallIntColumn("ResourceTypeId");
        internal readonly VarCharColumn ResourceId = new VarCharColumn("ResourceId", 64, "Latin1_General_100_CS_AS");
        internal readonly NullableIntColumn Version = new NullableIntColumn("Version");

        protected override global::System.Collections.Generic.IEnumerable<Column> Columns => new Column[] { ResourceTypeId, ResourceId, Version };

        protected override void FillSqlDataRecord(global::Microsoft.Data.SqlClient.Server.SqlDataRecord record, ResourceKeyListRow rowData)
        {
            ResourceTypeId.Set(record, 0, rowData.ResourceTypeId);
            ResourceId.Set(record, 1, rowData.ResourceId);
            Version.Set(record, 2, rowData.Version);
        }
    }

    internal struct ResourceKeyListRow
    {
        internal ResourceKeyListRow(System.Int16 ResourceTypeId, System.String ResourceId, System.Nullable<System.Int32> Version)
        {
            this.ResourceTypeId = ResourceTypeId;
            this.ResourceId = ResourceId;
            this.Version = Version;
        }

        internal System.Int16 ResourceTypeId { get; }
        internal System.String ResourceId { get; }
        internal System.Nullable<System.Int32> Version { get; }
    }

    internal class ResourceListTableValuedParameterDefinition : TableValuedParameterDefinition<ResourceListRow>
    {
        internal ResourceListTableValuedParameterDefinition(System.String parameterName) : base(parameterName, "dbo.ResourceList")
        {
        }

        internal readonly SmallIntColumn ResourceTypeId = new SmallIntColumn("ResourceTypeId");
        internal readonly BigIntColumn ResourceSurrogateId = new BigIntColumn("ResourceSurrogateId");
        internal readonly VarCharColumn ResourceId = new VarCharColumn("ResourceId", 64, "Latin1_General_100_CS_AS");
        internal readonly IntColumn Version = new IntColumn("Version");
        internal readonly BitColumn HasVersionToCompare = new BitColumn("HasVersionToCompare");
        internal readonly BitColumn IsDeleted = new BitColumn("IsDeleted");
        internal readonly BitColumn IsHistory = new BitColumn("IsHistory");
        internal readonly BitColumn KeepHistory = new BitColumn("KeepHistory");
        internal readonly VarBinaryColumn RawResource = new VarBinaryColumn("RawResource", -1);
        internal readonly BitColumn IsRawResourceMetaSet = new BitColumn("IsRawResourceMetaSet");
        internal readonly NullableVarCharColumn RequestMethod = new NullableVarCharColumn("RequestMethod", 10);
        internal readonly NullableVarCharColumn SearchParamHash = new NullableVarCharColumn("SearchParamHash", 64);

        protected override global::System.Collections.Generic.IEnumerable<Column> Columns => new Column[] { ResourceTypeId, ResourceSurrogateId, ResourceId, Version, HasVersionToCompare, IsDeleted, IsHistory, KeepHistory, RawResource, IsRawResourceMetaSet, RequestMethod, SearchParamHash };

        protected override void FillSqlDataRecord(global::Microsoft.Data.SqlClient.Server.SqlDataRecord record, ResourceListRow rowData)
        {
            ResourceTypeId.Set(record, 0, rowData.ResourceTypeId);
            ResourceSurrogateId.Set(record, 1, rowData.ResourceSurrogateId);
            ResourceId.Set(record, 2, rowData.ResourceId);
            Version.Set(record, 3, rowData.Version);
            HasVersionToCompare.Set(record, 4, rowData.HasVersionToCompare);
            IsDeleted.Set(record, 5, rowData.IsDeleted);
            IsHistory.Set(record, 6, rowData.IsHistory);
            KeepHistory.Set(record, 7, rowData.KeepHistory);
            RawResource.Set(record, 8, rowData.RawResource);
            IsRawResourceMetaSet.Set(record, 9, rowData.IsRawResourceMetaSet);
            RequestMethod.Set(record, 10, rowData.RequestMethod);
            SearchParamHash.Set(record, 11, rowData.SearchParamHash);
        }
    }

    internal struct ResourceListRow
    {
        internal ResourceListRow(System.Int16 ResourceTypeId, System.Int64 ResourceSurrogateId, System.String ResourceId, System.Int32 Version, System.Boolean HasVersionToCompare, System.Boolean IsDeleted, System.Boolean IsHistory, System.Boolean KeepHistory, global::System.IO.Stream RawResource, System.Boolean IsRawResourceMetaSet, System.String RequestMethod, System.String SearchParamHash)
        {
            this.ResourceTypeId = ResourceTypeId;
            this.ResourceSurrogateId = ResourceSurrogateId;
            this.ResourceId = ResourceId;
            this.Version = Version;
            this.HasVersionToCompare = HasVersionToCompare;
            this.IsDeleted = IsDeleted;
            this.IsHistory = IsHistory;
            this.KeepHistory = KeepHistory;
            this.RawResource = RawResource;
            this.IsRawResourceMetaSet = IsRawResourceMetaSet;
            this.RequestMethod = RequestMethod;
            this.SearchParamHash = SearchParamHash;
        }

        internal System.Int16 ResourceTypeId { get; }
        internal System.Int64 ResourceSurrogateId { get; }
        internal System.String ResourceId { get; }
        internal System.Int32 Version { get; }
        internal System.Boolean HasVersionToCompare { get; }
        internal System.Boolean IsDeleted { get; }
        internal System.Boolean IsHistory { get; }
        internal System.Boolean KeepHistory { get; }
        internal global::System.IO.Stream RawResource { get; }
        internal System.Boolean IsRawResourceMetaSet { get; }
        internal System.String RequestMethod { get; }
        internal System.String SearchParamHash { get; }
    }

    internal class ResourceWriteClaimListTableValuedParameterDefinition : TableValuedParameterDefinition<ResourceWriteClaimListRow>
    {
        internal ResourceWriteClaimListTableValuedParameterDefinition(System.String parameterName) : base(parameterName, "dbo.ResourceWriteClaimList")
        {
        }

        internal readonly BigIntColumn ResourceSurrogateId = new BigIntColumn("ResourceSurrogateId");
        internal readonly TinyIntColumn ClaimTypeId = new TinyIntColumn("ClaimTypeId");
        internal readonly NVarCharColumn ClaimValue = new NVarCharColumn("ClaimValue", 128);

        protected override global::System.Collections.Generic.IEnumerable<Column> Columns => new Column[] { ResourceSurrogateId, ClaimTypeId, ClaimValue };

        protected override void FillSqlDataRecord(global::Microsoft.Data.SqlClient.Server.SqlDataRecord record, ResourceWriteClaimListRow rowData)
        {
            ResourceSurrogateId.Set(record, 0, rowData.ResourceSurrogateId);
            ClaimTypeId.Set(record, 1, rowData.ClaimTypeId);
            ClaimValue.Set(record, 2, rowData.ClaimValue);
        }
    }

    internal struct ResourceWriteClaimListRow
    {
        internal ResourceWriteClaimListRow(System.Int64 ResourceSurrogateId, System.Byte ClaimTypeId, System.String ClaimValue)
        {
            this.ResourceSurrogateId = ResourceSurrogateId;
            this.ClaimTypeId = ClaimTypeId;
            this.ClaimValue = ClaimValue;
        }

        internal System.Int64 ResourceSurrogateId { get; }
        internal System.Byte ClaimTypeId { get; }
        internal System.String ClaimValue { get; }
    }

    internal class SearchParamTableTypeV1TableValuedParameterDefinition : TableValuedParameterDefinition<SearchParamTableTypeV1Row>
    {
        internal SearchParamTableTypeV1TableValuedParameterDefinition(System.String parameterName) : base(parameterName, "dbo.SearchParamTableType_1")
        {
        }

        internal readonly VarCharColumn Uri = new VarCharColumn("Uri", 128, "Latin1_General_100_CS_AS");
        internal readonly VarCharColumn Status = new VarCharColumn("Status", 10);
        internal readonly BitColumn IsPartiallySupported = new BitColumn("IsPartiallySupported");

        protected override global::System.Collections.Generic.IEnumerable<Column> Columns => new Column[] { Uri, Status, IsPartiallySupported };

        protected override void FillSqlDataRecord(global::Microsoft.Data.SqlClient.Server.SqlDataRecord record, SearchParamTableTypeV1Row rowData)
        {
            Uri.Set(record, 0, rowData.Uri);
            Status.Set(record, 1, rowData.Status);
            IsPartiallySupported.Set(record, 2, rowData.IsPartiallySupported);
        }
    }

    internal struct SearchParamTableTypeV1Row
    {
        internal SearchParamTableTypeV1Row(System.String Uri, System.String Status, System.Boolean IsPartiallySupported)
        {
            this.Uri = Uri;
            this.Status = Status;
            this.IsPartiallySupported = IsPartiallySupported;
        }

        internal System.String Uri { get; }
        internal System.String Status { get; }
        internal System.Boolean IsPartiallySupported { get; }
    }

    internal class SearchParamTableTypeV2TableValuedParameterDefinition : TableValuedParameterDefinition<SearchParamTableTypeV2Row>
    {
        internal SearchParamTableTypeV2TableValuedParameterDefinition(System.String parameterName) : base(parameterName, "dbo.SearchParamTableType_2")
        {
        }

        internal readonly VarCharColumn Uri = new VarCharColumn("Uri", 128, "Latin1_General_100_CS_AS");
        internal readonly VarCharColumn Status = new VarCharColumn("Status", 20);
        internal readonly BitColumn IsPartiallySupported = new BitColumn("IsPartiallySupported");

        protected override global::System.Collections.Generic.IEnumerable<Column> Columns => new Column[] { Uri, Status, IsPartiallySupported };

        protected override void FillSqlDataRecord(global::Microsoft.Data.SqlClient.Server.SqlDataRecord record, SearchParamTableTypeV2Row rowData)
        {
            Uri.Set(record, 0, rowData.Uri);
            Status.Set(record, 1, rowData.Status);
            IsPartiallySupported.Set(record, 2, rowData.IsPartiallySupported);
        }
    }

    internal struct SearchParamTableTypeV2Row
    {
        internal SearchParamTableTypeV2Row(System.String Uri, System.String Status, System.Boolean IsPartiallySupported)
        {
            this.Uri = Uri;
            this.Status = Status;
            this.IsPartiallySupported = IsPartiallySupported;
        }

        internal System.String Uri { get; }
        internal System.String Status { get; }
        internal System.Boolean IsPartiallySupported { get; }
    }

    internal class StringListTableValuedParameterDefinition : TableValuedParameterDefinition<StringListRow>
    {
        internal StringListTableValuedParameterDefinition(System.String parameterName) : base(parameterName, "dbo.StringList")
        {
        }

        internal readonly VarCharColumn String = new VarCharColumn("String", -1);

        protected override global::System.Collections.Generic.IEnumerable<Column> Columns => new Column[] { String };

        protected override void FillSqlDataRecord(global::Microsoft.Data.SqlClient.Server.SqlDataRecord record, StringListRow rowData)
        {
            String.Set(record, 0, rowData.String);
        }
    }

    internal struct StringListRow
    {
        internal StringListRow(System.String String)
        {
            this.String = String;
        }

        internal System.String String { get; }
    }

    internal class StringSearchParamListTableValuedParameterDefinition : TableValuedParameterDefinition<StringSearchParamListRow>
    {
        internal StringSearchParamListTableValuedParameterDefinition(System.String parameterName) : base(parameterName, "dbo.StringSearchParamList")
        {
        }

        internal readonly SmallIntColumn ResourceTypeId = new SmallIntColumn("ResourceTypeId");
        internal readonly BigIntColumn ResourceSurrogateId = new BigIntColumn("ResourceSurrogateId");
        internal readonly SmallIntColumn SearchParamId = new SmallIntColumn("SearchParamId");
        internal readonly NVarCharColumn Text = new NVarCharColumn("Text", 256, "Latin1_General_100_CI_AI_SC");
        internal readonly NullableNVarCharColumn TextOverflow = new NullableNVarCharColumn("TextOverflow", -1, "Latin1_General_100_CI_AI_SC");
        internal readonly BitColumn IsMin = new BitColumn("IsMin");
        internal readonly BitColumn IsMax = new BitColumn("IsMax");

        protected override global::System.Collections.Generic.IEnumerable<Column> Columns => new Column[] { ResourceTypeId, ResourceSurrogateId, SearchParamId, Text, TextOverflow, IsMin, IsMax };

        protected override void FillSqlDataRecord(global::Microsoft.Data.SqlClient.Server.SqlDataRecord record, StringSearchParamListRow rowData)
        {
            ResourceTypeId.Set(record, 0, rowData.ResourceTypeId);
            ResourceSurrogateId.Set(record, 1, rowData.ResourceSurrogateId);
            SearchParamId.Set(record, 2, rowData.SearchParamId);
            Text.Set(record, 3, rowData.Text);
            TextOverflow.Set(record, 4, rowData.TextOverflow);
            IsMin.Set(record, 5, rowData.IsMin);
            IsMax.Set(record, 6, rowData.IsMax);
        }
    }

    internal struct StringSearchParamListRow
    {
        internal StringSearchParamListRow(System.Int16 ResourceTypeId, System.Int64 ResourceSurrogateId, System.Int16 SearchParamId, System.String Text, System.String TextOverflow, System.Boolean IsMin, System.Boolean IsMax)
        {
            this.ResourceTypeId = ResourceTypeId;
            this.ResourceSurrogateId = ResourceSurrogateId;
            this.SearchParamId = SearchParamId;
            this.Text = Text;
            this.TextOverflow = TextOverflow;
            this.IsMin = IsMin;
            this.IsMax = IsMax;
        }

        internal System.Int16 ResourceTypeId { get; }
        internal System.Int64 ResourceSurrogateId { get; }
        internal System.Int16 SearchParamId { get; }
        internal System.String Text { get; }
        internal System.String TextOverflow { get; }
        internal System.Boolean IsMin { get; }
        internal System.Boolean IsMax { get; }
    }

    internal class TokenDateTimeCompositeSearchParamListTableValuedParameterDefinition : TableValuedParameterDefinition<TokenDateTimeCompositeSearchParamListRow>
    {
        internal TokenDateTimeCompositeSearchParamListTableValuedParameterDefinition(System.String parameterName) : base(parameterName, "dbo.TokenDateTimeCompositeSearchParamList")
        {
        }

        internal readonly SmallIntColumn ResourceTypeId = new SmallIntColumn("ResourceTypeId");
        internal readonly BigIntColumn ResourceSurrogateId = new BigIntColumn("ResourceSurrogateId");
        internal readonly SmallIntColumn SearchParamId = new SmallIntColumn("SearchParamId");
        internal readonly NullableIntColumn SystemId1 = new NullableIntColumn("SystemId1");
        internal readonly VarCharColumn Code1 = new VarCharColumn("Code1", 256, "Latin1_General_100_CS_AS");
        internal readonly NullableVarCharColumn CodeOverflow1 = new NullableVarCharColumn("CodeOverflow1", -1, "Latin1_General_100_CS_AS");
        internal readonly DateTimeOffsetColumn StartDateTime2 = new DateTimeOffsetColumn("StartDateTime2", 7);
        internal readonly DateTimeOffsetColumn EndDateTime2 = new DateTimeOffsetColumn("EndDateTime2", 7);
        internal readonly BitColumn IsLongerThanADay2 = new BitColumn("IsLongerThanADay2");

        protected override global::System.Collections.Generic.IEnumerable<Column> Columns => new Column[] { ResourceTypeId, ResourceSurrogateId, SearchParamId, SystemId1, Code1, CodeOverflow1, StartDateTime2, EndDateTime2, IsLongerThanADay2 };

        protected override void FillSqlDataRecord(global::Microsoft.Data.SqlClient.Server.SqlDataRecord record, TokenDateTimeCompositeSearchParamListRow rowData)
        {
            ResourceTypeId.Set(record, 0, rowData.ResourceTypeId);
            ResourceSurrogateId.Set(record, 1, rowData.ResourceSurrogateId);
            SearchParamId.Set(record, 2, rowData.SearchParamId);
            SystemId1.Set(record, 3, rowData.SystemId1);
            Code1.Set(record, 4, rowData.Code1);
            CodeOverflow1.Set(record, 5, rowData.CodeOverflow1);
            StartDateTime2.Set(record, 6, rowData.StartDateTime2);
            EndDateTime2.Set(record, 7, rowData.EndDateTime2);
            IsLongerThanADay2.Set(record, 8, rowData.IsLongerThanADay2);
        }
    }

    internal struct TokenDateTimeCompositeSearchParamListRow
    {
        internal TokenDateTimeCompositeSearchParamListRow(System.Int16 ResourceTypeId, System.Int64 ResourceSurrogateId, System.Int16 SearchParamId, System.Nullable<System.Int32> SystemId1, System.String Code1, System.String CodeOverflow1, System.DateTimeOffset StartDateTime2, System.DateTimeOffset EndDateTime2, System.Boolean IsLongerThanADay2)
        {
            this.ResourceTypeId = ResourceTypeId;
            this.ResourceSurrogateId = ResourceSurrogateId;
            this.SearchParamId = SearchParamId;
            this.SystemId1 = SystemId1;
            this.Code1 = Code1;
            this.CodeOverflow1 = CodeOverflow1;
            this.StartDateTime2 = StartDateTime2;
            this.EndDateTime2 = EndDateTime2;
            this.IsLongerThanADay2 = IsLongerThanADay2;
        }

        internal System.Int16 ResourceTypeId { get; }
        internal System.Int64 ResourceSurrogateId { get; }
        internal System.Int16 SearchParamId { get; }
        internal System.Nullable<System.Int32> SystemId1 { get; }
        internal System.String Code1 { get; }
        internal System.String CodeOverflow1 { get; }
        internal System.DateTimeOffset StartDateTime2 { get; }
        internal System.DateTimeOffset EndDateTime2 { get; }
        internal System.Boolean IsLongerThanADay2 { get; }
    }

    internal class TokenNumberNumberCompositeSearchParamListTableValuedParameterDefinition : TableValuedParameterDefinition<TokenNumberNumberCompositeSearchParamListRow>
    {
        internal TokenNumberNumberCompositeSearchParamListTableValuedParameterDefinition(System.String parameterName) : base(parameterName, "dbo.TokenNumberNumberCompositeSearchParamList")
        {
        }

        internal readonly SmallIntColumn ResourceTypeId = new SmallIntColumn("ResourceTypeId");
        internal readonly BigIntColumn ResourceSurrogateId = new BigIntColumn("ResourceSurrogateId");
        internal readonly SmallIntColumn SearchParamId = new SmallIntColumn("SearchParamId");
        internal readonly NullableIntColumn SystemId1 = new NullableIntColumn("SystemId1");
        internal readonly VarCharColumn Code1 = new VarCharColumn("Code1", 256, "Latin1_General_100_CS_AS");
        internal readonly NullableVarCharColumn CodeOverflow1 = new NullableVarCharColumn("CodeOverflow1", -1, "Latin1_General_100_CS_AS");
        internal readonly NullableDecimalColumn SingleValue2 = new NullableDecimalColumn("SingleValue2", 36, 18);
        internal readonly NullableDecimalColumn LowValue2 = new NullableDecimalColumn("LowValue2", 36, 18);
        internal readonly NullableDecimalColumn HighValue2 = new NullableDecimalColumn("HighValue2", 36, 18);
        internal readonly NullableDecimalColumn SingleValue3 = new NullableDecimalColumn("SingleValue3", 36, 18);
        internal readonly NullableDecimalColumn LowValue3 = new NullableDecimalColumn("LowValue3", 36, 18);
        internal readonly NullableDecimalColumn HighValue3 = new NullableDecimalColumn("HighValue3", 36, 18);
        internal readonly BitColumn HasRange = new BitColumn("HasRange");

        protected override global::System.Collections.Generic.IEnumerable<Column> Columns => new Column[] { ResourceTypeId, ResourceSurrogateId, SearchParamId, SystemId1, Code1, CodeOverflow1, SingleValue2, LowValue2, HighValue2, SingleValue3, LowValue3, HighValue3, HasRange };

        protected override void FillSqlDataRecord(global::Microsoft.Data.SqlClient.Server.SqlDataRecord record, TokenNumberNumberCompositeSearchParamListRow rowData)
        {
            ResourceTypeId.Set(record, 0, rowData.ResourceTypeId);
            ResourceSurrogateId.Set(record, 1, rowData.ResourceSurrogateId);
            SearchParamId.Set(record, 2, rowData.SearchParamId);
            SystemId1.Set(record, 3, rowData.SystemId1);
            Code1.Set(record, 4, rowData.Code1);
            CodeOverflow1.Set(record, 5, rowData.CodeOverflow1);
            SingleValue2.Set(record, 6, rowData.SingleValue2);
            LowValue2.Set(record, 7, rowData.LowValue2);
            HighValue2.Set(record, 8, rowData.HighValue2);
            SingleValue3.Set(record, 9, rowData.SingleValue3);
            LowValue3.Set(record, 10, rowData.LowValue3);
            HighValue3.Set(record, 11, rowData.HighValue3);
            HasRange.Set(record, 12, rowData.HasRange);
        }
    }

    internal struct TokenNumberNumberCompositeSearchParamListRow
    {
        internal TokenNumberNumberCompositeSearchParamListRow(System.Int16 ResourceTypeId, System.Int64 ResourceSurrogateId, System.Int16 SearchParamId, System.Nullable<System.Int32> SystemId1, System.String Code1, System.String CodeOverflow1, System.Nullable<System.Decimal> SingleValue2, System.Nullable<System.Decimal> LowValue2, System.Nullable<System.Decimal> HighValue2, System.Nullable<System.Decimal> SingleValue3, System.Nullable<System.Decimal> LowValue3, System.Nullable<System.Decimal> HighValue3, System.Boolean HasRange)
        {
            this.ResourceTypeId = ResourceTypeId;
            this.ResourceSurrogateId = ResourceSurrogateId;
            this.SearchParamId = SearchParamId;
            this.SystemId1 = SystemId1;
            this.Code1 = Code1;
            this.CodeOverflow1 = CodeOverflow1;
            this.SingleValue2 = SingleValue2;
            this.LowValue2 = LowValue2;
            this.HighValue2 = HighValue2;
            this.SingleValue3 = SingleValue3;
            this.LowValue3 = LowValue3;
            this.HighValue3 = HighValue3;
            this.HasRange = HasRange;
        }

        internal System.Int16 ResourceTypeId { get; }
        internal System.Int64 ResourceSurrogateId { get; }
        internal System.Int16 SearchParamId { get; }
        internal System.Nullable<System.Int32> SystemId1 { get; }
        internal System.String Code1 { get; }
        internal System.String CodeOverflow1 { get; }
        internal System.Nullable<System.Decimal> SingleValue2 { get; }
        internal System.Nullable<System.Decimal> LowValue2 { get; }
        internal System.Nullable<System.Decimal> HighValue2 { get; }
        internal System.Nullable<System.Decimal> SingleValue3 { get; }
        internal System.Nullable<System.Decimal> LowValue3 { get; }
        internal System.Nullable<System.Decimal> HighValue3 { get; }
        internal System.Boolean HasRange { get; }
    }

    internal class TokenQuantityCompositeSearchParamListTableValuedParameterDefinition : TableValuedParameterDefinition<TokenQuantityCompositeSearchParamListRow>
    {
        internal TokenQuantityCompositeSearchParamListTableValuedParameterDefinition(System.String parameterName) : base(parameterName, "dbo.TokenQuantityCompositeSearchParamList")
        {
        }

        internal readonly SmallIntColumn ResourceTypeId = new SmallIntColumn("ResourceTypeId");
        internal readonly BigIntColumn ResourceSurrogateId = new BigIntColumn("ResourceSurrogateId");
        internal readonly SmallIntColumn SearchParamId = new SmallIntColumn("SearchParamId");
        internal readonly NullableIntColumn SystemId1 = new NullableIntColumn("SystemId1");
        internal readonly VarCharColumn Code1 = new VarCharColumn("Code1", 256, "Latin1_General_100_CS_AS");
        internal readonly NullableVarCharColumn CodeOverflow1 = new NullableVarCharColumn("CodeOverflow1", -1, "Latin1_General_100_CS_AS");
        internal readonly NullableIntColumn SystemId2 = new NullableIntColumn("SystemId2");
        internal readonly NullableIntColumn QuantityCodeId2 = new NullableIntColumn("QuantityCodeId2");
        internal readonly NullableDecimalColumn SingleValue2 = new NullableDecimalColumn("SingleValue2", 36, 18);
        internal readonly NullableDecimalColumn LowValue2 = new NullableDecimalColumn("LowValue2", 36, 18);
        internal readonly NullableDecimalColumn HighValue2 = new NullableDecimalColumn("HighValue2", 36, 18);

        protected override global::System.Collections.Generic.IEnumerable<Column> Columns => new Column[] { ResourceTypeId, ResourceSurrogateId, SearchParamId, SystemId1, Code1, CodeOverflow1, SystemId2, QuantityCodeId2, SingleValue2, LowValue2, HighValue2 };

        protected override void FillSqlDataRecord(global::Microsoft.Data.SqlClient.Server.SqlDataRecord record, TokenQuantityCompositeSearchParamListRow rowData)
        {
            ResourceTypeId.Set(record, 0, rowData.ResourceTypeId);
            ResourceSurrogateId.Set(record, 1, rowData.ResourceSurrogateId);
            SearchParamId.Set(record, 2, rowData.SearchParamId);
            SystemId1.Set(record, 3, rowData.SystemId1);
            Code1.Set(record, 4, rowData.Code1);
            CodeOverflow1.Set(record, 5, rowData.CodeOverflow1);
            SystemId2.Set(record, 6, rowData.SystemId2);
            QuantityCodeId2.Set(record, 7, rowData.QuantityCodeId2);
            SingleValue2.Set(record, 8, rowData.SingleValue2);
            LowValue2.Set(record, 9, rowData.LowValue2);
            HighValue2.Set(record, 10, rowData.HighValue2);
        }
    }

    internal struct TokenQuantityCompositeSearchParamListRow
    {
        internal TokenQuantityCompositeSearchParamListRow(System.Int16 ResourceTypeId, System.Int64 ResourceSurrogateId, System.Int16 SearchParamId, System.Nullable<System.Int32> SystemId1, System.String Code1, System.String CodeOverflow1, System.Nullable<System.Int32> SystemId2, System.Nullable<System.Int32> QuantityCodeId2, System.Nullable<System.Decimal> SingleValue2, System.Nullable<System.Decimal> LowValue2, System.Nullable<System.Decimal> HighValue2)
        {
            this.ResourceTypeId = ResourceTypeId;
            this.ResourceSurrogateId = ResourceSurrogateId;
            this.SearchParamId = SearchParamId;
            this.SystemId1 = SystemId1;
            this.Code1 = Code1;
            this.CodeOverflow1 = CodeOverflow1;
            this.SystemId2 = SystemId2;
            this.QuantityCodeId2 = QuantityCodeId2;
            this.SingleValue2 = SingleValue2;
            this.LowValue2 = LowValue2;
            this.HighValue2 = HighValue2;
        }

        internal System.Int16 ResourceTypeId { get; }
        internal System.Int64 ResourceSurrogateId { get; }
        internal System.Int16 SearchParamId { get; }
        internal System.Nullable<System.Int32> SystemId1 { get; }
        internal System.String Code1 { get; }
        internal System.String CodeOverflow1 { get; }
        internal System.Nullable<System.Int32> SystemId2 { get; }
        internal System.Nullable<System.Int32> QuantityCodeId2 { get; }
        internal System.Nullable<System.Decimal> SingleValue2 { get; }
        internal System.Nullable<System.Decimal> LowValue2 { get; }
        internal System.Nullable<System.Decimal> HighValue2 { get; }
    }

    internal class TokenSearchParamListTableValuedParameterDefinition : TableValuedParameterDefinition<TokenSearchParamListRow>
    {
        internal TokenSearchParamListTableValuedParameterDefinition(System.String parameterName) : base(parameterName, "dbo.TokenSearchParamList")
        {
        }

        internal readonly SmallIntColumn ResourceTypeId = new SmallIntColumn("ResourceTypeId");
        internal readonly BigIntColumn ResourceSurrogateId = new BigIntColumn("ResourceSurrogateId");
        internal readonly SmallIntColumn SearchParamId = new SmallIntColumn("SearchParamId");
        internal readonly NullableIntColumn SystemId = new NullableIntColumn("SystemId");
        internal readonly VarCharColumn Code = new VarCharColumn("Code", 256, "Latin1_General_100_CS_AS");
        internal readonly NullableVarCharColumn CodeOverflow = new NullableVarCharColumn("CodeOverflow", -1, "Latin1_General_100_CS_AS");

        protected override global::System.Collections.Generic.IEnumerable<Column> Columns => new Column[] { ResourceTypeId, ResourceSurrogateId, SearchParamId, SystemId, Code, CodeOverflow };

        protected override void FillSqlDataRecord(global::Microsoft.Data.SqlClient.Server.SqlDataRecord record, TokenSearchParamListRow rowData)
        {
            ResourceTypeId.Set(record, 0, rowData.ResourceTypeId);
            ResourceSurrogateId.Set(record, 1, rowData.ResourceSurrogateId);
            SearchParamId.Set(record, 2, rowData.SearchParamId);
            SystemId.Set(record, 3, rowData.SystemId);
            Code.Set(record, 4, rowData.Code);
            CodeOverflow.Set(record, 5, rowData.CodeOverflow);
        }
    }

    internal struct TokenSearchParamListRow
    {
        internal TokenSearchParamListRow(System.Int16 ResourceTypeId, System.Int64 ResourceSurrogateId, System.Int16 SearchParamId, System.Nullable<System.Int32> SystemId, System.String Code, System.String CodeOverflow)
        {
            this.ResourceTypeId = ResourceTypeId;
            this.ResourceSurrogateId = ResourceSurrogateId;
            this.SearchParamId = SearchParamId;
            this.SystemId = SystemId;
            this.Code = Code;
            this.CodeOverflow = CodeOverflow;
        }

        internal System.Int16 ResourceTypeId { get; }
        internal System.Int64 ResourceSurrogateId { get; }
        internal System.Int16 SearchParamId { get; }
        internal System.Nullable<System.Int32> SystemId { get; }
        internal System.String Code { get; }
        internal System.String CodeOverflow { get; }
    }

    internal class TokenStringCompositeSearchParamListTableValuedParameterDefinition : TableValuedParameterDefinition<TokenStringCompositeSearchParamListRow>
    {
        internal TokenStringCompositeSearchParamListTableValuedParameterDefinition(System.String parameterName) : base(parameterName, "dbo.TokenStringCompositeSearchParamList")
        {
        }

        internal readonly SmallIntColumn ResourceTypeId = new SmallIntColumn("ResourceTypeId");
        internal readonly BigIntColumn ResourceSurrogateId = new BigIntColumn("ResourceSurrogateId");
        internal readonly SmallIntColumn SearchParamId = new SmallIntColumn("SearchParamId");
        internal readonly NullableIntColumn SystemId1 = new NullableIntColumn("SystemId1");
        internal readonly VarCharColumn Code1 = new VarCharColumn("Code1", 256, "Latin1_General_100_CS_AS");
        internal readonly NullableVarCharColumn CodeOverflow1 = new NullableVarCharColumn("CodeOverflow1", -1, "Latin1_General_100_CS_AS");
        internal readonly NVarCharColumn Text2 = new NVarCharColumn("Text2", 256, "Latin1_General_100_CI_AI_SC");
        internal readonly NullableNVarCharColumn TextOverflow2 = new NullableNVarCharColumn("TextOverflow2", -1, "Latin1_General_100_CI_AI_SC");

        protected override global::System.Collections.Generic.IEnumerable<Column> Columns => new Column[] { ResourceTypeId, ResourceSurrogateId, SearchParamId, SystemId1, Code1, CodeOverflow1, Text2, TextOverflow2 };

        protected override void FillSqlDataRecord(global::Microsoft.Data.SqlClient.Server.SqlDataRecord record, TokenStringCompositeSearchParamListRow rowData)
        {
            ResourceTypeId.Set(record, 0, rowData.ResourceTypeId);
            ResourceSurrogateId.Set(record, 1, rowData.ResourceSurrogateId);
            SearchParamId.Set(record, 2, rowData.SearchParamId);
            SystemId1.Set(record, 3, rowData.SystemId1);
            Code1.Set(record, 4, rowData.Code1);
            CodeOverflow1.Set(record, 5, rowData.CodeOverflow1);
            Text2.Set(record, 6, rowData.Text2);
            TextOverflow2.Set(record, 7, rowData.TextOverflow2);
        }
    }

    internal struct TokenStringCompositeSearchParamListRow
    {
        internal TokenStringCompositeSearchParamListRow(System.Int16 ResourceTypeId, System.Int64 ResourceSurrogateId, System.Int16 SearchParamId, System.Nullable<System.Int32> SystemId1, System.String Code1, System.String CodeOverflow1, System.String Text2, System.String TextOverflow2)
        {
            this.ResourceTypeId = ResourceTypeId;
            this.ResourceSurrogateId = ResourceSurrogateId;
            this.SearchParamId = SearchParamId;
            this.SystemId1 = SystemId1;
            this.Code1 = Code1;
            this.CodeOverflow1 = CodeOverflow1;
            this.Text2 = Text2;
            this.TextOverflow2 = TextOverflow2;
        }

        internal System.Int16 ResourceTypeId { get; }
        internal System.Int64 ResourceSurrogateId { get; }
        internal System.Int16 SearchParamId { get; }
        internal System.Nullable<System.Int32> SystemId1 { get; }
        internal System.String Code1 { get; }
        internal System.String CodeOverflow1 { get; }
        internal System.String Text2 { get; }
        internal System.String TextOverflow2 { get; }
    }

    internal class TokenTextListTableValuedParameterDefinition : TableValuedParameterDefinition<TokenTextListRow>
    {
        internal TokenTextListTableValuedParameterDefinition(System.String parameterName) : base(parameterName, "dbo.TokenTextList")
        {
        }

        internal readonly SmallIntColumn ResourceTypeId = new SmallIntColumn("ResourceTypeId");
        internal readonly BigIntColumn ResourceSurrogateId = new BigIntColumn("ResourceSurrogateId");
        internal readonly SmallIntColumn SearchParamId = new SmallIntColumn("SearchParamId");
        internal readonly NVarCharColumn Text = new NVarCharColumn("Text", 400, "Latin1_General_CI_AI");

        protected override global::System.Collections.Generic.IEnumerable<Column> Columns => new Column[] { ResourceTypeId, ResourceSurrogateId, SearchParamId, Text };

        protected override void FillSqlDataRecord(global::Microsoft.Data.SqlClient.Server.SqlDataRecord record, TokenTextListRow rowData)
        {
            ResourceTypeId.Set(record, 0, rowData.ResourceTypeId);
            ResourceSurrogateId.Set(record, 1, rowData.ResourceSurrogateId);
            SearchParamId.Set(record, 2, rowData.SearchParamId);
            Text.Set(record, 3, rowData.Text);
        }
    }

    internal struct TokenTextListRow
    {
        internal TokenTextListRow(System.Int16 ResourceTypeId, System.Int64 ResourceSurrogateId, System.Int16 SearchParamId, System.String Text)
        {
            this.ResourceTypeId = ResourceTypeId;
            this.ResourceSurrogateId = ResourceSurrogateId;
            this.SearchParamId = SearchParamId;
            this.Text = Text;
        }

        internal System.Int16 ResourceTypeId { get; }
        internal System.Int64 ResourceSurrogateId { get; }
        internal System.Int16 SearchParamId { get; }
        internal System.String Text { get; }
    }

    internal class TokenTokenCompositeSearchParamListTableValuedParameterDefinition : TableValuedParameterDefinition<TokenTokenCompositeSearchParamListRow>
    {
        internal TokenTokenCompositeSearchParamListTableValuedParameterDefinition(System.String parameterName) : base(parameterName, "dbo.TokenTokenCompositeSearchParamList")
        {
        }

        internal readonly SmallIntColumn ResourceTypeId = new SmallIntColumn("ResourceTypeId");
        internal readonly BigIntColumn ResourceSurrogateId = new BigIntColumn("ResourceSurrogateId");
        internal readonly SmallIntColumn SearchParamId = new SmallIntColumn("SearchParamId");
        internal readonly NullableIntColumn SystemId1 = new NullableIntColumn("SystemId1");
        internal readonly VarCharColumn Code1 = new VarCharColumn("Code1", 256, "Latin1_General_100_CS_AS");
        internal readonly NullableVarCharColumn CodeOverflow1 = new NullableVarCharColumn("CodeOverflow1", -1, "Latin1_General_100_CS_AS");
        internal readonly NullableIntColumn SystemId2 = new NullableIntColumn("SystemId2");
        internal readonly VarCharColumn Code2 = new VarCharColumn("Code2", 256, "Latin1_General_100_CS_AS");
        internal readonly NullableVarCharColumn CodeOverflow2 = new NullableVarCharColumn("CodeOverflow2", -1, "Latin1_General_100_CS_AS");

        protected override global::System.Collections.Generic.IEnumerable<Column> Columns => new Column[] { ResourceTypeId, ResourceSurrogateId, SearchParamId, SystemId1, Code1, CodeOverflow1, SystemId2, Code2, CodeOverflow2 };

        protected override void FillSqlDataRecord(global::Microsoft.Data.SqlClient.Server.SqlDataRecord record, TokenTokenCompositeSearchParamListRow rowData)
        {
            ResourceTypeId.Set(record, 0, rowData.ResourceTypeId);
            ResourceSurrogateId.Set(record, 1, rowData.ResourceSurrogateId);
            SearchParamId.Set(record, 2, rowData.SearchParamId);
            SystemId1.Set(record, 3, rowData.SystemId1);
            Code1.Set(record, 4, rowData.Code1);
            CodeOverflow1.Set(record, 5, rowData.CodeOverflow1);
            SystemId2.Set(record, 6, rowData.SystemId2);
            Code2.Set(record, 7, rowData.Code2);
            CodeOverflow2.Set(record, 8, rowData.CodeOverflow2);
        }
    }

    internal struct TokenTokenCompositeSearchParamListRow
    {
        internal TokenTokenCompositeSearchParamListRow(System.Int16 ResourceTypeId, System.Int64 ResourceSurrogateId, System.Int16 SearchParamId, System.Nullable<System.Int32> SystemId1, System.String Code1, System.String CodeOverflow1, System.Nullable<System.Int32> SystemId2, System.String Code2, System.String CodeOverflow2)
        {
            this.ResourceTypeId = ResourceTypeId;
            this.ResourceSurrogateId = ResourceSurrogateId;
            this.SearchParamId = SearchParamId;
            this.SystemId1 = SystemId1;
            this.Code1 = Code1;
            this.CodeOverflow1 = CodeOverflow1;
            this.SystemId2 = SystemId2;
            this.Code2 = Code2;
            this.CodeOverflow2 = CodeOverflow2;
        }

        internal System.Int16 ResourceTypeId { get; }
        internal System.Int64 ResourceSurrogateId { get; }
        internal System.Int16 SearchParamId { get; }
        internal System.Nullable<System.Int32> SystemId1 { get; }
        internal System.String Code1 { get; }
        internal System.String CodeOverflow1 { get; }
        internal System.Nullable<System.Int32> SystemId2 { get; }
        internal System.String Code2 { get; }
        internal System.String CodeOverflow2 { get; }
    }

    internal class UriSearchParamListTableValuedParameterDefinition : TableValuedParameterDefinition<UriSearchParamListRow>
    {
        internal UriSearchParamListTableValuedParameterDefinition(System.String parameterName) : base(parameterName, "dbo.UriSearchParamList")
        {
        }

        internal readonly SmallIntColumn ResourceTypeId = new SmallIntColumn("ResourceTypeId");
        internal readonly BigIntColumn ResourceSurrogateId = new BigIntColumn("ResourceSurrogateId");
        internal readonly SmallIntColumn SearchParamId = new SmallIntColumn("SearchParamId");
        internal readonly VarCharColumn Uri = new VarCharColumn("Uri", 256, "Latin1_General_100_CS_AS");

        protected override global::System.Collections.Generic.IEnumerable<Column> Columns => new Column[] { ResourceTypeId, ResourceSurrogateId, SearchParamId, Uri };

        protected override void FillSqlDataRecord(global::Microsoft.Data.SqlClient.Server.SqlDataRecord record, UriSearchParamListRow rowData)
        {
            ResourceTypeId.Set(record, 0, rowData.ResourceTypeId);
            ResourceSurrogateId.Set(record, 1, rowData.ResourceSurrogateId);
            SearchParamId.Set(record, 2, rowData.SearchParamId);
            Uri.Set(record, 3, rowData.Uri);
        }
    }

    internal struct UriSearchParamListRow
    {
        internal UriSearchParamListRow(System.Int16 ResourceTypeId, System.Int64 ResourceSurrogateId, System.Int16 SearchParamId, System.String Uri)
        {
            this.ResourceTypeId = ResourceTypeId;
            this.ResourceSurrogateId = ResourceSurrogateId;
            this.SearchParamId = SearchParamId;
            this.Uri = Uri;
        }

        internal System.Int16 ResourceTypeId { get; }
        internal System.Int64 ResourceSurrogateId { get; }
        internal System.Int16 SearchParamId { get; }
        internal System.String Uri { get; }
    }
}